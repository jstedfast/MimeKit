<Type Name="Rfc2047" FullName="MimeKit.Utils.Rfc2047">
  <TypeSignature Language="C#" Value="public static class Rfc2047" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Rfc2047 extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Utility methods for encoding and decoding rfc2047 encoded-word tokens.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodePhrase">
      <MemberSignature Language="C#" Value="public static string DecodePhrase (byte[] phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodePhrase(unsigned int8[] phrase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="phrase">The phrase to decode.</param>
        <summary>
            Decodes the specified phrase.
            </summary>
        <returns>The decoded phrase.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="phrase" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodePhrase">
      <MemberSignature Language="C#" Value="public static string DecodePhrase (MimeKit.ParserOptions options, byte[] phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodePhrase(class MimeKit.ParserOptions options, unsigned int8[] phrase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="phrase" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="options">The parser options to use.</param>
        <param name="phrase">The phrase to decode.</param>
        <summary>
            Decodes the specified phrase.
            </summary>
        <returns>The decoded phrase.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="phrase" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodePhrase">
      <MemberSignature Language="C#" Value="public static string DecodePhrase (byte[] phrase, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodePhrase(unsigned int8[] phrase, int32 startIndex, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">The phrase to decode.</param>
        <param name="startIndex">The starting index.</param>
        <param name="count">The number of bytes to decode.</param>
        <summary>
            Decodes the specified number of bytes of the phrase starting
            at the specified starting index.
            </summary>
        <returns>The decoded phrase.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="phrase" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="count" /> do not specify
            a valid range in the byte array.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodePhrase">
      <MemberSignature Language="C#" Value="public static string DecodePhrase (MimeKit.ParserOptions options, byte[] phrase, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodePhrase(class MimeKit.ParserOptions options, unsigned int8[] phrase, int32 startIndex, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="phrase" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">The parser options to use.</param>
        <param name="phrase">The phrase to decode.</param>
        <param name="startIndex">The starting index.</param>
        <param name="count">The number of bytes to decode.</param>
        <summary>
            Decodes the specified number of bytes of the phrase starting
            at the specified starting index.
            </summary>
        <returns>The decoded phrase.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="phrase" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="count" /> do not specify
            a valid range in the byte array.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeText">
      <MemberSignature Language="C#" Value="public static string DecodeText (byte[] text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodeText(unsigned int8[] text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to decode.</param>
        <summary>
            Decodes the unstructured text.
            </summary>
        <returns>The decoded text.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeText">
      <MemberSignature Language="C#" Value="public static string DecodeText (MimeKit.ParserOptions options, byte[] text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodeText(class MimeKit.ParserOptions options, unsigned int8[] text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="text" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="options">The parser options to use.</param>
        <param name="text">The text to decode.</param>
        <summary>
            Decodes the unstructured text.
            </summary>
        <returns>The decoded text.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="text" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeText">
      <MemberSignature Language="C#" Value="public static string DecodeText (byte[] text, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodeText(unsigned int8[] text, int32 startIndex, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text to decode.</param>
        <param name="startIndex">The starting index.</param>
        <param name="count">The number of bytes to decode.</param>
        <summary>
            Decodes the specified number of bytes of unstructured text starting
            at the specified starting index.
            </summary>
        <returns>The decoded text.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="count" /> do not specify
            a valid range in the byte array.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeText">
      <MemberSignature Language="C#" Value="public static string DecodeText (MimeKit.ParserOptions options, byte[] text, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodeText(class MimeKit.ParserOptions options, unsigned int8[] text, int32 startIndex, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="text" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">The parser options to use.</param>
        <param name="text">The text to decode.</param>
        <param name="startIndex">The starting index.</param>
        <param name="count">The number of bytes to decode.</param>
        <summary>
            Decodes the specified number of bytes of unstructured text starting
            at the specified starting index.
            </summary>
        <returns>The decoded text.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="text" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="count" /> do not specify
            a valid range in the byte array.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EncodePhrase">
      <MemberSignature Language="C#" Value="public static byte[] EncodePhrase (System.Text.Encoding charset, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncodePhrase(class System.Text.Encoding charset, string phrase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charset" Type="System.Text.Encoding" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="charset">The charset encoding.</param>
        <param name="phrase">The phrase to encode.</param>
        <summary>
            Encodes the phrase using the specified charset encoding according
            to the rules of RFC 2047.
            </summary>
        <returns>The encoded phrase.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="charset" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="phrase" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncodePhrase">
      <MemberSignature Language="C#" Value="public static byte[] EncodePhrase (MimeKit.FormatOptions options, System.Text.Encoding charset, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncodePhrase(class MimeKit.FormatOptions options, class System.Text.Encoding charset, string phrase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="charset" Type="System.Text.Encoding" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options</param>
        <param name="charset">The charset encoding.</param>
        <param name="phrase">The phrase to encode.</param>
        <summary>
            Encodes the phrase using the specified charset encoding according
            to the rules of RFC 2047.
            </summary>
        <returns>The encoded phrase.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="charset" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="phrase" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeText">
      <MemberSignature Language="C#" Value="public static byte[] EncodeText (System.Text.Encoding charset, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncodeText(class System.Text.Encoding charset, string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charset" Type="System.Text.Encoding" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="charset">The charset encoding.</param>
        <param name="text">The text to encode.</param>
        <summary>
            Encodes the unstructured text using the specified charset encoding
            according to the rules of RFC 2047.
            </summary>
        <returns>The encoded text.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="charset" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="text" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeText">
      <MemberSignature Language="C#" Value="public static byte[] EncodeText (MimeKit.FormatOptions options, System.Text.Encoding charset, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncodeText(class MimeKit.FormatOptions options, class System.Text.Encoding charset, string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="charset" Type="System.Text.Encoding" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options</param>
        <param name="charset">The charset encoding.</param>
        <param name="text">The text to encode.</param>
        <summary>
            Encodes the unstructured text using the specified charset encoding
            according to the rules of RFC 2047.
            </summary>
        <returns>The encoded text.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="charset" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="text" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
