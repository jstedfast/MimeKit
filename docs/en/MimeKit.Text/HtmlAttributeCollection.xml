<Type Name="HtmlAttributeCollection" FullName="MimeKit.Text.HtmlAttributeCollection">
  <TypeSignature Language="C#" Value="public class HtmlAttributeCollection : System.Collections.Generic.IEnumerable&lt;MimeKit.Text.HtmlAttribute&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlAttributeCollection extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.Text.HtmlAttribute&gt;, class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;MimeKit.Text.HtmlAttribute&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A readonly collection of HTML attributes.
            </summary>
    <remarks>
            A readonly collection of HTML attributes.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlAttributeCollection (System.Collections.Generic.IEnumerable&lt;MimeKit.Text.HtmlAttribute&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.Text.HtmlAttribute&gt; collection) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;MimeKit.Text.HtmlAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">A collection of attributes.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Text.HtmlAttributeCollection" /> class.
            </summary>
        <remarks>
            Creates a new <see cref="T:MimeKit.Text.HtmlAttributeCollection" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the number of attributes in the collection.
            </summary>
        <value>The number of attributes in the collection.</value>
        <remarks>
            Gets the number of attributes in the collection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;MimeKit.Text.HtmlAttribute&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class MimeKit.Text.HtmlAttribute&gt; GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;MimeKit.Text.HtmlAttribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an enumerator for the attribute collection.
            </summary>
        <returns>The enumerator.</returns>
        <remarks>
            Gets an enumerator for the attribute collection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public MimeKit.Text.HtmlAttribute this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.Text.HtmlAttribute Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Text.HtmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
            Get the <see cref="T:MimeKit.Text.HtmlAttribute" /> at the specified index.
            </summary>
        <value>The HTML attribute at the specified index.</value>
        <remarks>
            Gets the <see cref="T:MimeKit.Text.HtmlAttribute" /> at the specified index.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an enumerator for the attribute collection.
            </summary>
        <returns>The enumerator.</returns>
        <remarks>
            Gets an enumerator for the attribute collection.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
