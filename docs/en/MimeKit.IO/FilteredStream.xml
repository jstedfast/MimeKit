<Type Name="FilteredStream" FullName="MimeKit.IO.FilteredStream">
  <TypeSignature Language="C#" Value="public class FilteredStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilteredStream extends System.IO.Stream" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A stream which filters data as it is read or written.
            </summary>
    <remarks>
            Passes data through each <see cref="T:MimeKit.IO.Filters.IMimeFilter" /> as the data is read or written.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilteredStream (System.IO.Stream source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream source) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="source">The underlying stream to filter.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.IO.FilteredStream" /> class.
            </summary>
        <remarks>
            Creates a filtered stream using the specified source stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (MimeKit.IO.Filters.IMimeFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class MimeKit.IO.Filters.IMimeFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="MimeKit.IO.Filters.IMimeFilter" />
      </Parameters>
      <Docs>
        <param name="filter">The filter.</param>
        <summary>
            Adds the specified filter.
            </summary>
        <remarks>
            Adds the <paramref name="filter" /> to the end of the list of filters
            that data will pass through as data is read from or written to the
            underlying source stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Checks whether or not the stream supports reading.
            </summary>
        <value>
          <c>true</c> if the stream supports reading; otherwise, <c>false</c>.</value>
        <remarks>
            The <see cref="T:MimeKit.IO.FilteredStream" /> will only support reading if the
            <see cref="P:MimeKit.IO.FilteredStream.Source" /> supports it.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Checks whether or not the stream supports seeking.
            </summary>
        <value>
          <c>true</c> if the stream supports seeking; otherwise, <c>false</c>.</value>
        <remarks>
            Seeking is not supported by the <see cref="T:MimeKit.IO.FilteredStream" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Checks whether or not I/O operations can timeout.
            </summary>
        <value>
          <c>true</c> if I/O operations can timeout; otherwise, <c>false</c>.</value>
        <remarks>
            The <see cref="T:MimeKit.IO.FilteredStream" /> will only support timing out if the
            <see cref="P:MimeKit.IO.FilteredStream.Source" /> supports it.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Checks whether or not the stream supports writing.
            </summary>
        <value>
          <c>true</c> if the stream supports writing; otherwise, <c>false</c>.</value>
        <remarks>
            The <see cref="T:MimeKit.IO.FilteredStream" /> will only support writing if the
            <see cref="P:MimeKit.IO.FilteredStream.Source" /> supports it.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (MimeKit.IO.Filters.IMimeFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class MimeKit.IO.Filters.IMimeFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="MimeKit.IO.Filters.IMimeFilter" />
      </Parameters>
      <Docs>
        <param name="filter">The filter.</param>
        <summary>
            Checks if the filtered stream contains the specified filter.
            </summary>
        <returns>
          <value>true</value> if the specified filter exists;
            otherwise <value>false</value>.</returns>
        <remarks>
            Determines whether or not the filtered stream contains the specified filter.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only the unmanaged resources.</param>
        <summary>
            Releases the unmanaged resources used by the <see cref="T:MimeKit.IO.FilteredStream" /> and
            optionally releases the managed resources.
            </summary>
        <remarks>
            Sets the internal disposed state to <c>true</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears all buffers for this stream and causes any buffered data to be written
            to the underlying device.
            </summary>
        <remarks>
            Flushes the state of all filters, writing any output to the underlying <see cref="P:MimeKit.IO.FilteredStream.Source" />
            stream and then calling <see cref="M:System.IO.Stream.Flush" /> on the <see cref="P:MimeKit.IO.FilteredStream.Source" />.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The stream has been disposed.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The stream does not support writing.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the length of the stream, in bytes.
            </summary>
        <value>The length of the stream in bytes.</value>
        <remarks>
            Getting the length of a <see cref="T:MimeKit.IO.FilteredStream" /> is not supported.
            </remarks>
        <exception cref="T:System.NotSupportedException">
            The stream does not support seeking.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The stream has been disposed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current position within the stream.
            </summary>
        <value>The position of the stream.</value>
        <remarks>
            Getting and setting the position of a <see cref="T:MimeKit.IO.FilteredStream" /> is not supported.
            </remarks>
        <exception cref="T:System.NotSupportedException">
            The stream does not support seeking.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The stream has been disposed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The buffer to read data into.</param>
        <param name="offset">The offset into the buffer to start reading data.</param>
        <param name="count">The number of bytes to read.</param>
        <summary>
            Reads a sequence of bytes from the stream and advances the position
            within the stream by the number of bytes read.
            </summary>
        <returns>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many
            bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
        <remarks>
            Reads up to the requested number of bytes, passing the data read from the <see cref="P:MimeKit.IO.FilteredStream.Source" /> stream
            through each of the filters before finally copying the result into the provided buffer.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The stream has been disposed.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The stream does not support reading.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is less than zero or greater than the length of <paramref name="buffer" />.</para>
          <para>-or-</para>
          <para>The <paramref name="buffer" /> is not large enough to contain <paramref name="count" /> bytes strting
            at the specified <paramref name="offset" />.</para>
        </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out.
            </summary>
        <value>A value, in miliseconds, that determines how long the stream will attempt to read before timing out.</value>
        <remarks>
            Gets or sets the read timeout on the <see cref="P:MimeKit.IO.FilteredStream.Source" /> stream.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (MimeKit.IO.Filters.IMimeFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class MimeKit.IO.Filters.IMimeFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="MimeKit.IO.Filters.IMimeFilter" />
      </Parameters>
      <Docs>
        <param name="filter">The filter.</param>
        <summary>
            Remove the specified filter.
            </summary>
        <returns>
          <value>true</value> if the filter was removed; otherwise <value>false</value>.</returns>
        <remarks>
            Removes the specified filter from the list if it exists.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">The offset into the stream relative to the <paramref name="origin" />.</param>
        <param name="origin">The origin to seek from.</param>
        <summary>
            Sets the position within the current stream.
            </summary>
        <returns>The new position within the stream.</returns>
        <remarks>
            Seeking is not supported by the <see cref="T:MimeKit.IO.FilteredStream" />.
            </remarks>
        <exception cref="T:System.NotSupportedException">
            The stream does not support seeking.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">The desired length of the stream in bytes.</param>
        <summary>
            Sets the length of the stream.
            </summary>
        <remarks>
            Setting the length of a <see cref="T:MimeKit.IO.FilteredStream" /> is not supported.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The stream has been disposed.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The stream does not support setting the length.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.IO.Stream Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the underlying source stream.
            </summary>
        <value>The underlying source stream.</value>
        <remarks>
            In general, it is not a good idea to manipulate the underlying
            source stream because most <see cref="T:MimeKit.IO.Filters.IMimeFilter" />s store
            important state about previous bytes read from or written to
            the source stream.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The buffer to write.</param>
        <param name="offset">The offset of the first byte to write.</param>
        <param name="count">The number of bytes to write.</param>
        <summary>
            Writes a sequence of bytes to the stream and advances the current
            position within this stream by the number of bytes written.
            </summary>
        <remarks>
            Filters the provided buffer through each of the filters before finally writing
            the result to the underlying <see cref="P:MimeKit.IO.FilteredStream.Source" /> stream.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The stream has been disposed.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The stream does not support writing.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is less than zero or greater than the length of <paramref name="buffer" />.</para>
          <para>-or-</para>
          <para>The <paramref name="buffer" /> is not large enough to contain <paramref name="count" /> bytes strting
            at the specified <paramref name="offset" />.</para>
        </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out.
            </summary>
        <value>A value, in miliseconds, that determines how long the stream will attempt to write before timing out.</value>
        <remarks>
            Gets or sets the write timeout on the <see cref="P:MimeKit.IO.FilteredStream.Source" /> stream.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
