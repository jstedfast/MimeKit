<Type Name="OpenPgpContext" FullName="MimeKit.Cryptography.OpenPgpContext">
  <TypeSignature Language="C#" Value="public abstract class OpenPgpContext : MimeKit.Cryptography.CryptographyContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OpenPgpContext extends MimeKit.Cryptography.CryptographyContext" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MimeKit.Cryptography.CryptographyContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An abstract OpenPGP cryptography context which can be used for PGP/MIME.
            </summary>
    <remarks>
            Generally speaking, applications should not use a <see cref="T:MimeKit.Cryptography.OpenPgpContext" />
            directly, but rather via higher level APIs such as <see cref="T:MimeKit.Cryptography.MultipartSigned" />
            and <see cref="T:MimeKit.Cryptography.MultipartEncrypted" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OpenPgpContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Cryptography.OpenPgpContext" /> class.
            </summary>
        <remarks>
            Subclasses choosing to use this constructor MUST set the <see cref="P:MimeKit.Cryptography.OpenPgpContext.PublicKeyRingPath" />,
            <see cref="P:MimeKit.Cryptography.OpenPgpContext.SecretKeyRingPath" />, <see cref="P:MimeKit.Cryptography.OpenPgpContext.PublicKeyRingBundle" />, and the
            <see cref="P:MimeKit.Cryptography.OpenPgpContext.SecretKeyRingBundle" /> properties themselves.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OpenPgpContext (string pubring, string secring);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string pubring, string secring) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pubring" Type="System.String" />
        <Parameter Name="secring" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pubring">The public keyring file path.</param>
        <param name="secring">The secret keyring file path.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Cryptography.OpenPgpContext" /> class.
            </summary>
        <remarks>
            Creates a new <see cref="T:MimeKit.Cryptography.OpenPgpContext" /> using the specified public and private keyring paths.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="pubring" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="secring" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.IO.IOException">
            An error occurred while reading one of the keyring files.
            </exception>
        <exception cref="T:Org.BouncyCastle.Bcpg.OpenPgp.PgpException">
            An error occurred while parsing one of the keyring files.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public override MimeKit.MimeEntity Decrypt (System.IO.Stream encryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimeEntity Decrypt(class System.IO.Stream encryptedData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="encryptedData">The encrypted data.</param>
        <summary>
            Decrypts the specified encryptedData.
            </summary>
        <returns>The decrypted <see cref="T:MimeKit.MimeEntity" />.</returns>
        <remarks>
            Decrypts the specified encryptedData.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encryptedData" /> is <c>null</c>.
            </exception>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            The secret key could not be found to decrypt the stream.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The user chose to cancel the password prompt.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            3 bad attempts were made to unlock the secret key.
            </exception>
        <exception cref="T:MimeKit.Cryptography.PrivateKeyNotFoundException">
            The private key could not be found to decrypt the stream.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity Decrypt (System.IO.Stream encryptedData, out MimeKit.Cryptography.DigitalSignatureCollection signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimeEntity Decrypt(class System.IO.Stream encryptedData, class MimeKit.Cryptography.DigitalSignatureCollection signatures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.IO.Stream" />
        <Parameter Name="signatures" Type="MimeKit.Cryptography.DigitalSignatureCollection&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="encryptedData">The encrypted data.</param>
        <param name="signatures">A list of digital signatures if the data was both signed and encrypted.</param>
        <summary>
            Decrypts the specified encryptedData and extracts the digital signers if the content was also signed.
            </summary>
        <returns>The decrypted <see cref="T:MimeKit.MimeEntity" />.</returns>
        <remarks>
            Decrypts the specified encryptedData and extracts the digital signers if the content was also signed.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encryptedData" /> is <c>null</c>.
            </exception>
        <exception cref="T:MimeKit.Cryptography.PrivateKeyNotFoundException">
            The private key could not be found to decrypt the stream.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The user chose to cancel the password prompt.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            3 bad attempts were made to unlock the secret key.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public override MimeKit.MimePart Encrypt (System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt; recipients, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimePart Encrypt(class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MailboxAddress&gt; recipients, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipients" Type="System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt;" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="recipients">The recipients.</param>
        <param name="content">The content.</param>
        <summary>
            Encrypts the specified content for the specified recipients.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance
            containing the encrypted data.</returns>
        <remarks>
            Encrypts the specified content for the specified recipients.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="recipients" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the recipient keys cannot be used for encrypting.</para>
          <para>-or-</para>
          <para>No recipients were specified.</para>
        </exception>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A public key could not be found for one or more of the <paramref name="recipients" />.
            </exception>
        <exception cref="T:MimeKit.Cryptography.PublicKeyNotFoundException">
            A public key could not be found for one or more of the <paramref name="recipients" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public MimeKit.MimePart Encrypt (System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt; recipients, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimePart Encrypt(class System.Collections.Generic.IEnumerable`1&lt;class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt; recipients, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipients" Type="System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt;" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="recipients">The recipients.</param>
        <param name="content">The content.</param>
        <summary>
            Encrypts the specified content for the specified recipients.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance
            containing the encrypted data.</returns>
        <remarks>
            Encrypts the specified content for the specified recipients.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="recipients" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the recipient keys cannot be used for encrypting.</para>
          <para>-or-</para>
          <para>No recipients were specified.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProtocol">
      <MemberSignature Language="C#" Value="public override string EncryptionProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the encryption protocol.
            </summary>
        <value>The encryption protocol.</value>
        <remarks>
          <para>The encryption protocol is used by <see cref="T:MimeKit.Cryptography.MultipartEncrypted" />
            in order to determine what the protocol parameter of the Content-Type
            header should be.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public MimeKit.MimePart Export (Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRingBundle keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimePart Export(class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRingBundle keys) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRingBundle" />
      </Parameters>
      <Docs>
        <param name="keys">The keys.</param>
        <summary>
            Exports the specified public keys.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance containing the exported public keys.</returns>
        <remarks>
            Exports the specified public keys.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keys" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override MimeKit.MimePart Export (System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt; mailboxes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimePart Export(class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MailboxAddress&gt; mailboxes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailboxes" Type="System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt;" />
      </Parameters>
      <Docs>
        <param name="mailboxes">The mailboxes.</param>
        <summary>
            Exports the public keys for the specified mailboxes.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance containing the exported public keys.</returns>
        <remarks>
            Exports the public keys for the specified mailboxes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mailboxes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mailboxes" /> was empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public MimeKit.MimePart Export (System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimePart Export(class System.Collections.Generic.IEnumerable`1&lt;class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt; keys) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">The keys.</param>
        <summary>
            Exports the specified public keys.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance containing the exported public keys.</returns>
        <remarks>
            Exports the specified public keys.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keys" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDigestAlgorithm">
      <MemberSignature Language="C#" Value="public static MimeKit.Cryptography.DigestAlgorithm GetDigestAlgorithm (Org.BouncyCastle.Bcpg.HashAlgorithmTag hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MimeKit.Cryptography.DigestAlgorithm GetDigestAlgorithm(valuetype Org.BouncyCastle.Bcpg.HashAlgorithmTag hashAlgorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.DigestAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="Org.BouncyCastle.Bcpg.HashAlgorithmTag" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm">The hash algorithm.</param>
        <summary>
            Gets the equivalent <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> for the specified
            <see cref="T:Org.BouncyCastle.Bcpg.HashAlgorithmTag" />.
            </summary>
        <returns>The digest algorithm.</returns>
        <remarks>
            Gets the equivalent <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> for the specified
            <see cref="T:Org.BouncyCastle.Bcpg.HashAlgorithmTag" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hashAlgorithm" /> is out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="hashAlgorithm" /> does not have an equivalent <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> value.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDigestAlgorithm">
      <MemberSignature Language="C#" Value="public override MimeKit.Cryptography.DigestAlgorithm GetDigestAlgorithm (string micalg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype MimeKit.Cryptography.DigestAlgorithm GetDigestAlgorithm(string micalg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.DigestAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="micalg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="micalg">The micalg parameter value.</param>
        <summary>
            Gets the digest algorithm from the micalg parameter value in a multipart/signed part.
            </summary>
        <returns>The digest algorithm.</returns>
        <remarks>
            Maps the micalg parameter value string back to the appropriate <see cref="T:MimeKit.Cryptography.DigestAlgorithm" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="micalg" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDigestAlgorithmName">
      <MemberSignature Language="C#" Value="public override string GetDigestAlgorithmName (MimeKit.Cryptography.DigestAlgorithm micalg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDigestAlgorithmName(valuetype MimeKit.Cryptography.DigestAlgorithm micalg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="micalg" Type="MimeKit.Cryptography.DigestAlgorithm" />
      </Parameters>
      <Docs>
        <param name="micalg">The digest algorithm.</param>
        <summary>
            Gets the string name of the digest algorithm for use with the micalg parameter of a multipart/signed part.
            </summary>
        <returns>The micalg value.</returns>
        <remarks>
          <para>Maps the <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> to the appropriate string identifier
            as used by the micalg parameter value of a multipart/signed Content-Type
            header. For example:</para>
          <list type="table">
            <listheader>
              <term>Algorithm</term>
              <description>Name</description>
            </listheader>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.MD5" />
              </term>
              <description>pgp-md5</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha1" />
              </term>
              <description>pgp-sha1</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.RipeMD160" />
              </term>
              <description>pgp-ripemd160</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.MD2" />
              </term>
              <description>pgp-md2</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Tiger192" />
              </term>
              <description>pgp-tiger192</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Haval5160" />
              </term>
              <description>pgp-haval-5-160</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha256" />
              </term>
              <description>pgp-sha256</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha384" />
              </term>
              <description>pgp-sha384</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha512" />
              </term>
              <description>pgp-sha512</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha224" />
              </term>
              <description>pgp-sha224</description>
            </item>
          </list>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="micalg" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgorithm">
      <MemberSignature Language="C#" Value="public static Org.BouncyCastle.Bcpg.HashAlgorithmTag GetHashAlgorithm (MimeKit.Cryptography.DigestAlgorithm digestAlgo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Org.BouncyCastle.Bcpg.HashAlgorithmTag GetHashAlgorithm(valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.Bcpg.HashAlgorithmTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
      </Parameters>
      <Docs>
        <param name="digestAlgo">The digest algorithm.</param>
        <summary>
            Gets the equivalent <see cref="T:Org.BouncyCastle.Bcpg.HashAlgorithmTag" /> for the
            specified <see cref="T:MimeKit.Cryptography.DigestAlgorithm" />.
            </summary>
        <returns>The hash algorithm.</returns>
        <remarks>
            Maps a <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> to the equivalent <see cref="T:Org.BouncyCastle.Bcpg.HashAlgorithmTag" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="digestAlgo" /> is out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="digestAlgo" /> does not have an equivalent
            <see cref="T:Org.BouncyCastle.Bcpg.HashAlgorithmTag" /> value.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPasswordForKey">
      <MemberSignature Language="C#" Value="protected abstract string GetPasswordForKey (Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetPasswordForKey(class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey" />
      </Parameters>
      <Docs>
        <param name="key">The key.</param>
        <summary>
            Gets the password for key.
            </summary>
        <returns>The password for key.</returns>
        <remarks>
            Gets the password for key.
            </remarks>
        <exception cref="T:System.OperationCanceledException">
            The user chose to cancel the password request.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateKey">
      <MemberSignature Language="C#" Value="protected Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey GetPrivateKey (Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey GetPrivateKey(class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey" />
      </Parameters>
      <Docs>
        <param name="key">The secret key.</param>
        <summary>
            Gets the private key from the specified secret key.
            </summary>
        <returns>The private key.</returns>
        <remarks>
            Gets the private key from the specified secret key.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The user chose to cancel the password prompt.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            3 bad attempts were made to unlock the secret key.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateKey">
      <MemberSignature Language="C#" Value="protected Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey GetPrivateKey (long keyId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey GetPrivateKey(int64 keyId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyId" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="keyId">The key identifier.</param>
        <summary>
            Gets the private key.
            </summary>
        <returns>The private key.</returns>
        <remarks>
            Gets the private key.
            </remarks>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            The specified secret key could not be found.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The user chose to cancel the password prompt.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            3 bad attempts were made to unlock the secret key.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="protected virtual Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey GetPublicKey (MimeKit.MailboxAddress mailbox);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey GetPublicKey(class MimeKit.MailboxAddress mailbox) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailbox" Type="MimeKit.MailboxAddress" />
      </Parameters>
      <Docs>
        <param name="mailbox">The mailbox.</param>
        <summary>
            Gets the public key associated with the mailbox address.
            </summary>
        <returns>The encryption key.</returns>
        <remarks>
            Gets the public key associated with the mailbox address.
            </remarks>
        <exception cref="T:MimeKit.Cryptography.PublicKeyNotFoundException">
            The public key for the specified <paramref name="mailbox" /> could not be found.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mailbox" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKeyAlgorithm">
      <MemberSignature Language="C#" Value="public static MimeKit.Cryptography.PublicKeyAlgorithm GetPublicKeyAlgorithm (Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MimeKit.Cryptography.PublicKeyAlgorithm GetPublicKeyAlgorithm(valuetype Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.PublicKeyAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag" />
      </Parameters>
      <Docs>
        <param name="algorithm">The public-key algorithm.</param>
        <summary>
            Gets the equivalent <see cref="T:MimeKit.Cryptography.PublicKeyAlgorithm" /> for the specified
            <see cref="T:Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag" />.
            </summary>
        <returns>The public-key algorithm.</returns>
        <remarks>
            Gets the equivalent <see cref="T:MimeKit.Cryptography.PublicKeyAlgorithm" /> for the specified
            <see cref="T:Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="algorithm" /> is out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="algorithm" /> does not have an equivalent <see cref="T:MimeKit.Cryptography.PublicKeyAlgorithm" /> value.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKeys">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt; GetPublicKeys (System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt; mailboxes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt; GetPublicKeys(class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MailboxAddress&gt; mailboxes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailboxes" Type="System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt;" />
      </Parameters>
      <Docs>
        <param name="mailboxes">The mailboxes.</param>
        <summary>
            Gets the public keys for the specified mailbox addresses.
            </summary>
        <returns>The encryption keys.</returns>
        <remarks>
            Gets the public keys for the specified mailbox addresses.
            </remarks>
        <exception cref="T:MimeKit.Cryptography.PublicKeyNotFoundException">
            A public key for one or more of the <paramref name="mailboxes" /> could not be found.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mailboxes" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSigningKey">
      <MemberSignature Language="C#" Value="protected virtual Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey GetSigningKey (MimeKit.MailboxAddress mailbox);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey GetSigningKey(class MimeKit.MailboxAddress mailbox) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailbox" Type="MimeKit.MailboxAddress" />
      </Parameters>
      <Docs>
        <param name="mailbox">The mailbox.</param>
        <summary>
            Gets the signing key associated with the mailbox address.
            </summary>
        <returns>The signing key.</returns>
        <remarks>
            Gets the signing key associated with the mailbox address.
            </remarks>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A signing key for the specified <paramref name="mailbox" /> could not be found.
            </exception>
        <exception cref="T:MimeKit.Cryptography.PrivateKeyNotFoundException">
            A private key for the specified <paramref name="mailbox" /> could not be found.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mailbox" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The raw key data.</param>
        <summary>
            Imports public pgp keys from the specified stream.
            </summary>
        <remarks>
            Imports public pgp keys from the specified stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.IO.IOException">
          <para>An error occurred while parsing the raw key-ring data</para>
          <para>-or-</para>
          <para>An error occured while saving the public key-ring bundle.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportSecretKeys">
      <MemberSignature Language="C#" Value="public virtual void ImportSecretKeys (System.IO.Stream rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportSecretKeys(class System.IO.Stream rawData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="rawData">The raw key data.</param>
        <summary>
            Imports secret pgp keys from the specified stream.
            </summary>
        <remarks>
            Imports secret pgp keys from the specified stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rawData" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.IO.IOException">
          <para>An error occurred while parsing the raw key-ring data</para>
          <para>-or-</para>
          <para>An error occured while saving the public key-ring bundle.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeProtocol">
      <MemberSignature Language="C#" Value="public override string KeyExchangeProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the key exchange protocol.
            </summary>
        <value>The key exchange protocol.</value>
        <remarks>
            Gets the key exchange protocol.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicKeyRingBundle">
      <MemberSignature Language="C#" Value="public Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRingBundle PublicKeyRingBundle { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRingBundle PublicKeyRingBundle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRingBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the public keyring bundle.
            </summary>
        <value>The public keyring bundle.</value>
        <remarks>
            Gets the public keyring bundle.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicKeyRingPath">
      <MemberSignature Language="C#" Value="protected string PublicKeyRingPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicKeyRingPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the public keyring path.
            </summary>
        <value>The public key ring path.</value>
        <remarks>
            Gets the public keyring path.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SavePublicKeyRingBundle">
      <MemberSignature Language="C#" Value="protected void SavePublicKeyRingBundle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SavePublicKeyRingBundle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Saves the public key-ring bundle.
            </summary>
        <remarks>
          <para>Atomically saves the public key-ring bundle to the path specified by <see cref="P:MimeKit.Cryptography.OpenPgpContext.PublicKeyRingPath" />.</para>
          <para>Called by <see cref="M:MimeKit.Cryptography.OpenPgpContext.Import(System.IO.Stream)" /> if any public keys were successfully imported.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">
            An error occured while saving the public key-ring bundle.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SaveSecretKeyRingBundle">
      <MemberSignature Language="C#" Value="protected void SaveSecretKeyRingBundle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SaveSecretKeyRingBundle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Saves the secret key-ring bundle.
            </summary>
        <remarks>
          <para>Atomically saves the secret key-ring bundle to the path specified by <see cref="P:MimeKit.Cryptography.OpenPgpContext.SecretKeyRingPath" />.</para>
          <para>Called by <see cref="M:MimeKit.Cryptography.OpenPgpContext.ImportSecretKeys(System.IO.Stream)" /> if any secret keys were successfully imported.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">
            An error occured while saving the secret key-ring bundle.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SecretKeyRingBundle">
      <MemberSignature Language="C#" Value="public Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKeyRingBundle SecretKeyRingBundle { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKeyRingBundle SecretKeyRingBundle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKeyRingBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the secret keyring bundle.
            </summary>
        <value>The secret keyring bundle.</value>
        <remarks>
            Gets the secret keyring bundle.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretKeyRingPath">
      <MemberSignature Language="C#" Value="protected string SecretKeyRingPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecretKeyRingPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the secret keyring path.
            </summary>
        <value>The secret key ring path.</value>
        <remarks>
            Gets the secret keyring path.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public override MimeKit.MimePart Sign (MimeKit.MailboxAddress signer, MimeKit.Cryptography.DigestAlgorithm digestAlgo, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimePart Sign(class MimeKit.MailboxAddress signer, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="MimeKit.MailboxAddress" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="digestAlgo">The digest algorithm to use for signing.</param>
        <param name="content">The content.</param>
        <summary>
            Cryptographically signs the content.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance
            containing the detached signature data.</returns>
        <remarks>
            Cryptographically signs the content using the specified signer and digest algorithm.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="digestAlgo" /> is out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The specified <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> is not supported by this context.
            </exception>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A signing key could not be found for <paramref name="signer" />.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The user chose to cancel the password prompt.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            3 bad attempts were made to unlock the secret key.
            </exception>
        <exception cref="T:MimeKit.Cryptography.PrivateKeyNotFoundException">
            A signing key could not be found for <paramref name="signer" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.ApplicationPgpSignature Sign (Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey signer, MimeKit.Cryptography.DigestAlgorithm digestAlgo, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.Cryptography.ApplicationPgpSignature Sign(class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey signer, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.ApplicationPgpSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="digestAlgo">The digest algorithm to use for signing.</param>
        <param name="content">The content.</param>
        <summary>
            Cryptographically signs the content.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance
            containing the detached signature data.</returns>
        <remarks>
            Cryptographically signs the content using the specified signer and digest algorithm.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="signer" /> cannot be used for signing.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="digestAlgo" /> was out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The <paramref name="digestAlgo" /> is not supported.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The user chose to cancel the password prompt.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            3 bad attempts were made to unlock the secret key.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SignAndEncrypt">
      <MemberSignature Language="C#" Value="public MimeKit.MimePart SignAndEncrypt (MimeKit.MailboxAddress signer, MimeKit.Cryptography.DigestAlgorithm digestAlgo, System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt; recipients, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimePart SignAndEncrypt(class MimeKit.MailboxAddress signer, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo, class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MailboxAddress&gt; recipients, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="MimeKit.MailboxAddress" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
        <Parameter Name="recipients" Type="System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt;" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="digestAlgo">The digest algorithm to use for signing.</param>
        <param name="recipients">The recipients.</param>
        <param name="content">The content.</param>
        <summary>
            Cryptographically signs and encrypts the specified content for the specified recipients.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance
            containing the encrypted data.</returns>
        <remarks>
            Cryptographically signs and encrypts the specified content for the specified recipients.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="recipients" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="digestAlgo" /> is out of range.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the recipient keys cannot be used for encrypting.</para>
          <para>-or-</para>
          <para>No recipients were specified.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The specified <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> is not supported by this context.
            </exception>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
          <para>A signing key could not be found for <paramref name="signer" />.</para>
          <para>-or-</para>
          <para>A public key could not be found for one or more of the <paramref name="recipients" />.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The user chose to cancel the password prompt.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            3 bad attempts were made to unlock the secret key.
            </exception>
        <exception cref="T:MimeKit.Cryptography.PrivateKeyNotFoundException">
            The private key could not be found for <paramref name="signer" />.
            </exception>
        <exception cref="T:MimeKit.Cryptography.PublicKeyNotFoundException">
            A public key could not be found for one or more of the <paramref name="recipients" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SignAndEncrypt">
      <MemberSignature Language="C#" Value="public MimeKit.MimePart SignAndEncrypt (Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey signer, MimeKit.Cryptography.DigestAlgorithm digestAlgo, System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt; recipients, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimePart SignAndEncrypt(class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey signer, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo, class System.Collections.Generic.IEnumerable`1&lt;class Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt; recipients, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
        <Parameter Name="recipients" Type="System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey&gt;" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="digestAlgo">The digest algorithm to use for signing.</param>
        <param name="recipients">The recipients.</param>
        <param name="content">The content.</param>
        <summary>
            Cryptographically signs and encrypts the specified content for the specified recipients.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance
            containing the encrypted data.</returns>
        <remarks>
            Cryptographically signs and encrypts the specified content for the specified recipients.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="recipients" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="signer" /> cannot be used for signing.</para>
          <para>-or-</para>
          <para>One or more of the recipient keys cannot be used for encrypting.</para>
          <para>-or-</para>
          <para>No recipients were specified.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The user chose to cancel the password prompt.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            3 bad attempts were made to unlock the secret key.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureProtocol">
      <MemberSignature Language="C#" Value="public override string SignatureProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the signature protocol.
            </summary>
        <value>The signature protocol.</value>
        <remarks>
          <para>The signature protocol is used by <see cref="T:MimeKit.Cryptography.MultipartSigned" />
            in order to determine what the protocol parameter of the Content-Type
            header should be.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public override bool Supports (string protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Supports(string protocol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="protocol">The protocol.</param>
        <summary>
            Checks whether or not the specified protocol is supported.
            </summary>
        <returns>
          <c>true</c> if the protocol is supported; otherwise <c>false</c></returns>
        <remarks>
            Used in order to make sure that the protocol parameter value specified in either a multipart/signed
            or multipart/encrypted part is supported by the supplied cryptography context.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="protocol" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public override MimeKit.Cryptography.DigitalSignatureCollection Verify (System.IO.Stream content, System.IO.Stream signatureData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.Cryptography.DigitalSignatureCollection Verify(class System.IO.Stream content, class System.IO.Stream signatureData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.DigitalSignatureCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="signatureData" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content">The content.</param>
        <param name="signatureData">The signature data.</param>
        <summary>
            Verifies the specified content using the detached signatureData.
            </summary>
        <returns>A list of digital signatures.</returns>
        <remarks>
            Verifies the specified content using the detached signatureData.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="signatureData" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
