<Type Name="CmsRecipientCollection" FullName="MimeKit.Cryptography.CmsRecipientCollection">
  <TypeSignature Language="C#" Value="public class CmsRecipientCollection : System.Collections.Generic.ICollection&lt;MimeKit.Cryptography.CmsRecipient&gt;, System.Collections.Generic.IEnumerable&lt;MimeKit.Cryptography.CmsRecipient&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CmsRecipientCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class MimeKit.Cryptography.CmsRecipient&gt;, class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.Cryptography.CmsRecipient&gt;, class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;MimeKit.Cryptography.CmsRecipient&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;MimeKit.Cryptography.CmsRecipient&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A collection of <see cref="T:MimeKit.Cryptography.CmsRecipient" /> objects.
            </summary>
    <remarks>
            If the X.509 certificates are known for each of the recipients, you
            may wish to use a <see cref="T:MimeKit.Cryptography.CmsRecipientCollection" /> as opposed to
            using the methods that take a list of <see cref="T:MimeKit.MailboxAddress" />
            objects.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CmsRecipientCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Cryptography.CmsRecipientCollection" /> class.
            </summary>
        <remarks>
            Creates a new <see cref="T:MimeKit.Cryptography.CmsRecipientCollection" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (MimeKit.Cryptography.CmsRecipient recipient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class MimeKit.Cryptography.CmsRecipient recipient) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipient" Type="MimeKit.Cryptography.CmsRecipient" />
      </Parameters>
      <Docs>
        <param name="recipient">The recipient.</param>
        <summary>
            Adds the specified recipient.
            </summary>
        <remarks>
            Adds the specified recipient.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recipient" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears the recipient collection.
            </summary>
        <remarks>
            Removes all of the recipients from the collection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (MimeKit.Cryptography.CmsRecipient recipient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class MimeKit.Cryptography.CmsRecipient recipient) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipient" Type="MimeKit.Cryptography.CmsRecipient" />
      </Parameters>
      <Docs>
        <param name="recipient">The recipient.</param>
        <summary>
            Checks if the collection contains the specified recipient.
            </summary>
        <returns>
          <value>true</value> if the specified recipient exists;
            otherwise <value>false</value>.</returns>
        <remarks>
            Determines whether or not the collection contains the specified recipient.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recipient" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (MimeKit.Cryptography.CmsRecipient[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class MimeKit.Cryptography.CmsRecipient[] array, int32 arrayIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="MimeKit.Cryptography.CmsRecipient[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array.</param>
        <param name="arrayIndex">The array index.</param>
        <summary>
            Copies all of the recipients in the <see cref="T:MimeKit.Cryptography.CmsRecipientCollection" /> to the specified array.
            </summary>
        <remarks>
            Copies all of the recipients within the <see cref="T:MimeKit.Cryptography.CmsRecipientCollection" /> into the array,
            starting at the specified array index.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="arrayIndex" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of recipients in the collection.
            </summary>
        <value>The number of recipients in the collection.</value>
        <remarks>
            Indicates the number of recipients in the collection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;MimeKit.Cryptography.CmsRecipient&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class MimeKit.Cryptography.CmsRecipient&gt; GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;MimeKit.Cryptography.CmsRecipient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an enumerator for the collection of recipients.
            </summary>
        <returns>The enumerator.</returns>
        <remarks>
            Gets an enumerator for the collection of recipients.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
        <value>
          <c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        <remarks>
            A <see cref="T:MimeKit.Cryptography.CmsRecipientCollection" /> is never read-only.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (MimeKit.Cryptography.CmsRecipient recipient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class MimeKit.Cryptography.CmsRecipient recipient) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipient" Type="MimeKit.Cryptography.CmsRecipient" />
      </Parameters>
      <Docs>
        <param name="recipient">The recipient.</param>
        <summary>
            Removes the specified recipient.
            </summary>
        <returns>
          <value>true</value> if the recipient was removed; otherwise <value>false</value>.</returns>
        <remarks>
            Removes the specified recipient.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recipient" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an enumerator for the collection of recipients.
            </summary>
        <returns>The enumerator.</returns>
        <remarks>
            Gets an enumerator for the collection of recipients.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
