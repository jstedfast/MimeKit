<Type Name="X509CertificateDatabase" FullName="MimeKit.Cryptography.X509CertificateDatabase">
  <TypeSignature Language="C#" Value="public abstract class X509CertificateDatabase : IDisposable, MimeKit.Cryptography.IX509CertificateDatabase, Org.BouncyCastle.X509.Store.IX509Store" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit X509CertificateDatabase extends System.Object implements class MimeKit.Cryptography.IX509CertificateDatabase, class Org.BouncyCastle.X509.Store.IX509Store, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MimeKit.Cryptography.IX509CertificateDatabase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.BouncyCastle.X509.Store.IX509Store</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An X.509 certificate database.
            </summary>
    <remarks>
            An X.509 certificate database is used for storing certificates, metdata related to the certificates
            (such as encryption algorithms supported by the associated client), certificate revocation lists (CRLs),
            and private keys.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509CertificateDatabase (string password);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string password) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">The password used for encrypting and decrypting the private keys.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" /> class.
            </summary>
        <remarks>
            The password is used to encrypt and decrypt private keys in the database and cannot be null.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="password" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (MimeKit.Cryptography.X509CertificateRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class MimeKit.Cryptography.X509CertificateRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CertificateRecord" />
      </Parameters>
      <Docs>
        <param name="record">The certificate record.</param>
        <summary>
            Add the specified certificate record.
            </summary>
        <remarks>
            Adds the specified certificate record to the database.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="record" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (MimeKit.Cryptography.X509CrlRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class MimeKit.Cryptography.X509CrlRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CrlRecord" />
      </Parameters>
      <Docs>
        <param name="record">The CRL record.</param>
        <summary>
            Add the specified CRL record.
            </summary>
        <remarks>
            Adds the specified CRL record to the database.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="record" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases all resource used by the <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" /> object.
            </summary>
        <remarks>Call <see cref="M:MimeKit.Cryptography.X509CertificateDatabase.Dispose" /> when you are finished using the
            <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" />. The <see cref="M:MimeKit.Cryptography.X509CertificateDatabase.Dispose" /> method leaves the
            <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" /> in an unusable state. After calling
            <see cref="M:MimeKit.Cryptography.X509CertificateDatabase.Dispose" />, you must release all references to the
            <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" /> so the garbage collector can reclaim the memory that
            the <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" /> was occupying.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only the unmanaged resources.</param>
        <summary>
            Releases the unmanaged resources used by the <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" /> and
            optionally releases the managed resources.
            </summary>
        <remarks>
            Releases the unmanaged resources used by the <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" /> and
            optionally releases the managed resources.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~X509CertificateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" /> is reclaimed by garbage collection.
            </summary>
        <remarks>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:MimeKit.Cryptography.X509CertificateDatabase" /> is reclaimed by garbage collection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MimeKit.Cryptography.X509CrlRecord&gt; Find (Org.BouncyCastle.Asn1.X509.X509Name issuer, MimeKit.Cryptography.X509CrlRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.Cryptography.X509CrlRecord&gt; Find(class Org.BouncyCastle.Asn1.X509.X509Name issuer, valuetype MimeKit.Cryptography.X509CrlRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MimeKit.Cryptography.X509CrlRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="Org.BouncyCastle.Asn1.X509.X509Name" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CrlRecordFields" />
      </Parameters>
      <Docs>
        <param name="issuer">The issuer.</param>
        <param name="fields">The desired fields.</param>
        <summary>
            Finds the CRL records for the specified issuer.
            </summary>
        <returns>The matching CRL records populated with the desired fields.</returns>
        <remarks>
            Searches the database for CRL records matching the specified issuer, returning
            all matching records populated with the desired fields.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.X509CertificateRecord Find (Org.BouncyCastle.X509.X509Certificate certificate, MimeKit.Cryptography.X509CertificateRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.Cryptography.X509CertificateRecord Find(class Org.BouncyCastle.X509.X509Certificate certificate, valuetype MimeKit.Cryptography.X509CertificateRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.X509CertificateRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="Org.BouncyCastle.X509.X509Certificate" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CertificateRecordFields" />
      </Parameters>
      <Docs>
        <param name="certificate">The certificate.</param>
        <param name="fields">The desired fields.</param>
        <summary>
            Find the specified certificate.
            </summary>
        <returns>The matching record if found; otherwise <c>null</c>.</returns>
        <remarks>
            Searches the database for the specified certificate, returning the matching
            record with the desired fields populated.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.X509CrlRecord Find (Org.BouncyCastle.X509.X509Crl crl, MimeKit.Cryptography.X509CrlRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.Cryptography.X509CrlRecord Find(class Org.BouncyCastle.X509.X509Crl crl, valuetype MimeKit.Cryptography.X509CrlRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.X509CrlRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="crl" Type="Org.BouncyCastle.X509.X509Crl" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CrlRecordFields" />
      </Parameters>
      <Docs>
        <param name="crl">The certificate revocation list.</param>
        <param name="fields">The desired fields.</param>
        <summary>
            Finds the specified certificate revocation list.
            </summary>
        <returns>The matching record if found; otherwise <c>null</c>.</returns>
        <remarks>
            Searches the database for the specified CRL, returning the matching record with
            the desired fields populated.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="crl" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MimeKit.Cryptography.X509CertificateRecord&gt; Find (Org.BouncyCastle.X509.Store.IX509Selector selector, bool trustedOnly, MimeKit.Cryptography.X509CertificateRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.Cryptography.X509CertificateRecord&gt; Find(class Org.BouncyCastle.X509.Store.IX509Selector selector, bool trustedOnly, valuetype MimeKit.Cryptography.X509CertificateRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MimeKit.Cryptography.X509CertificateRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Org.BouncyCastle.X509.Store.IX509Selector" />
        <Parameter Name="trustedOnly" Type="System.Boolean" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CertificateRecordFields" />
      </Parameters>
      <Docs>
        <param name="selector">The match selector or <c>null</c> to match all certificates.</param>
        <param name="trustedOnly">
          <c>true</c> if only trusted certificates should be returned.</param>
        <param name="fields">The desired fields.</param>
        <summary>
            Finds the certificate records matching the specified selector.
            </summary>
        <returns>The matching certificate records populated with the desired fields.</returns>
        <remarks>
            Searches the database for certificate records matching the selector, returning all
            of the matching records populated with the desired fields.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MimeKit.Cryptography.X509CertificateRecord&gt; Find (MimeKit.MailboxAddress mailbox, DateTime now, bool requirePrivateKey, MimeKit.Cryptography.X509CertificateRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.Cryptography.X509CertificateRecord&gt; Find(class MimeKit.MailboxAddress mailbox, valuetype System.DateTime now, bool requirePrivateKey, valuetype MimeKit.Cryptography.X509CertificateRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MimeKit.Cryptography.X509CertificateRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailbox" Type="MimeKit.MailboxAddress" />
        <Parameter Name="now" Type="System.DateTime" />
        <Parameter Name="requirePrivateKey" Type="System.Boolean" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CertificateRecordFields" />
      </Parameters>
      <Docs>
        <param name="mailbox">The mailbox.</param>
        <param name="now">The date and time.</param>
        <param name="requirePrivateKey">
          <c>true</c> if a private key is required.</param>
        <param name="fields">The desired fields.</param>
        <summary>
            Finds the certificate records for the specified mailbox.
            </summary>
        <returns>The matching certificate records populated with the desired fields.</returns>
        <remarks>
            Searches the database for certificates matching the specified mailbox that are valid
            for the date and time specified, returning all matching records populated with the
            desired fields.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mailbox" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FindCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.X509.X509Certificate&gt; FindCertificates (Org.BouncyCastle.X509.Store.IX509Selector selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Org.BouncyCastle.X509.X509Certificate&gt; FindCertificates(class Org.BouncyCastle.X509.Store.IX509Selector selector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.X509.X509Certificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Org.BouncyCastle.X509.Store.IX509Selector" />
      </Parameters>
      <Docs>
        <param name="selector">The match selector or <c>null</c> to return all certificates.</param>
        <summary>
            Finds the certificates matching the specified selector.
            </summary>
        <returns>The matching certificates.</returns>
        <remarks>
            Searches the database for certificates matching the selector, returning all
            matching certificates.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrivateKeys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.Crypto.AsymmetricKeyParameter&gt; FindPrivateKeys (Org.BouncyCastle.X509.Store.IX509Selector selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Org.BouncyCastle.Crypto.AsymmetricKeyParameter&gt; FindPrivateKeys(class Org.BouncyCastle.X509.Store.IX509Selector selector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Org.BouncyCastle.Crypto.AsymmetricKeyParameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Org.BouncyCastle.X509.Store.IX509Selector" />
      </Parameters>
      <Docs>
        <param name="selector">The match selector or <c>null</c> to return all private keys.</param>
        <summary>
            Finds the private keys matching the specified selector.
            </summary>
        <returns>The matching certificates.</returns>
        <remarks>
            Searches the database for certificate records matching the selector, returning the
            private keys for each matching record.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnNames">
      <MemberSignature Language="C#" Value="protected static string[] GetColumnNames (MimeKit.Cryptography.X509CertificateRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string[] GetColumnNames(valuetype MimeKit.Cryptography.X509CertificateRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CertificateRecordFields" />
      </Parameters>
      <Docs>
        <param name="fields">The fields.</param>
        <summary>
            Gets the column names for the specified fields.
            </summary>
        <returns>The column names.</returns>
        <remarks>
            Gets the column names for the specified fields.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnNames">
      <MemberSignature Language="C#" Value="protected static string[] GetColumnNames (MimeKit.Cryptography.X509CrlRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string[] GetColumnNames(valuetype MimeKit.Cryptography.X509CrlRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CrlRecordFields" />
      </Parameters>
      <Docs>
        <param name="fields">The fields.</param>
        <summary>
            Gets the column names for the specified fields.
            </summary>
        <returns>The column names.</returns>
        <remarks>
            Gets the column names for the specified fields.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCrlStore">
      <MemberSignature Language="C#" Value="public Org.BouncyCastle.X509.Store.IX509Store GetCrlStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.BouncyCastle.X509.Store.IX509Store GetCrlStore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.X509.Store.IX509Store</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a certificate revocation list store.
            </summary>
        <returns>A certificate recovation list store.</returns>
        <remarks>
            Gets a certificate revocation list store.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetDeleteCommand (MimeKit.Cryptography.X509CertificateRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetDeleteCommand(class MimeKit.Cryptography.X509CertificateRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CertificateRecord" />
      </Parameters>
      <Docs>
        <param name="record">The certificate record.</param>
        <summary>
            Gets the database command to delete the specified certificate record.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to delete the specified certificate record.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetDeleteCommand (MimeKit.Cryptography.X509CrlRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetDeleteCommand(class MimeKit.Cryptography.X509CrlRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CrlRecord" />
      </Parameters>
      <Docs>
        <param name="record">The record.</param>
        <summary>
            Gets the database command to delete the specified CRL record.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to delete the specified CRL record.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetInsertCommand (MimeKit.Cryptography.X509CertificateRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetInsertCommand(class MimeKit.Cryptography.X509CertificateRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CertificateRecord" />
      </Parameters>
      <Docs>
        <param name="record">The certificate record.</param>
        <summary>
            Gets the database command to insert the specified certificate record.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to insert the specified certificate record.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetInsertCommand (MimeKit.Cryptography.X509CrlRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetInsertCommand(class MimeKit.Cryptography.X509CrlRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CrlRecord" />
      </Parameters>
      <Docs>
        <param name="record">The CRL record.</param>
        <summary>
            Gets the database command to insert the specified CRL record.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to insert the specified CRL record.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectAllCrlsCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetSelectAllCrlsCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetSelectAllCrlsCommand() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the database command to select all CRLs in the table.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to select all CRLs in the table.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetSelectCommand (Org.BouncyCastle.Asn1.X509.X509Name issuer, MimeKit.Cryptography.X509CrlRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetSelectCommand(class Org.BouncyCastle.Asn1.X509.X509Name issuer, valuetype MimeKit.Cryptography.X509CrlRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="Org.BouncyCastle.Asn1.X509.X509Name" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CrlRecordFields" />
      </Parameters>
      <Docs>
        <param name="issuer">The issuer.</param>
        <param name="fields">The fields to return.</param>
        <summary>
            Gets the database command to select the CRL records matching the specified issuer.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to select the CRL records matching the specified issuer.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetSelectCommand (Org.BouncyCastle.X509.X509Certificate certificate, MimeKit.Cryptography.X509CertificateRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetSelectCommand(class Org.BouncyCastle.X509.X509Certificate certificate, valuetype MimeKit.Cryptography.X509CertificateRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="Org.BouncyCastle.X509.X509Certificate" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CertificateRecordFields" />
      </Parameters>
      <Docs>
        <param name="certificate">The certificate.</param>
        <param name="fields">The fields to return.</param>
        <summary>
            Gets the database command to select the record matching the specified certificate.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to select the record matching the specified certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetSelectCommand (Org.BouncyCastle.X509.X509Crl crl, MimeKit.Cryptography.X509CrlRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetSelectCommand(class Org.BouncyCastle.X509.X509Crl crl, valuetype MimeKit.Cryptography.X509CrlRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="crl" Type="Org.BouncyCastle.X509.X509Crl" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CrlRecordFields" />
      </Parameters>
      <Docs>
        <param name="crl">The X.509 CRL.</param>
        <param name="fields">The fields to return.</param>
        <summary>
            Gets the database command to select the record for the specified CRL.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to select the record for the specified CRL.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetSelectCommand (MimeKit.MailboxAddress mailbox, DateTime now, bool requirePrivateKey, MimeKit.Cryptography.X509CertificateRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetSelectCommand(class MimeKit.MailboxAddress mailbox, valuetype System.DateTime now, bool requirePrivateKey, valuetype MimeKit.Cryptography.X509CertificateRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailbox" Type="MimeKit.MailboxAddress" />
        <Parameter Name="now" Type="System.DateTime" />
        <Parameter Name="requirePrivateKey" Type="System.Boolean" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CertificateRecordFields" />
      </Parameters>
      <Docs>
        <param name="mailbox">The mailbox.</param>
        <param name="now">The date and time for which the certificate should be valid.</param>
        <param name="requirePrivateKey">
          <c>true</c> if the certificate must have a private key.</param>
        <param name="fields">The fields to return.</param>
        <summary>
            Gets the database command to select the certificate records for the specified mailbox.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to select the certificate records for the specified mailbox.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetSelectCommand (Org.BouncyCastle.X509.Store.IX509Selector selector, bool trustedOnly, bool requirePrivateKey, MimeKit.Cryptography.X509CertificateRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetSelectCommand(class Org.BouncyCastle.X509.Store.IX509Selector selector, bool trustedOnly, bool requirePrivateKey, valuetype MimeKit.Cryptography.X509CertificateRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Org.BouncyCastle.X509.Store.IX509Selector" />
        <Parameter Name="trustedOnly" Type="System.Boolean" />
        <Parameter Name="requirePrivateKey" Type="System.Boolean" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CertificateRecordFields" />
      </Parameters>
      <Docs>
        <param name="selector">Selector.</param>
        <param name="trustedOnly">
          <c>true</c> if only trusted certificates should be matched.</param>
        <param name="requirePrivateKey">
          <c>true</c> if the certificate must have a private key.</param>
        <param name="fields">The fields to return.</param>
        <summary>
            Gets the database command to select certificate records matching the specified selector.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to select certificate records matching the specified selector.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetUpdateCommand (MimeKit.Cryptography.X509CrlRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetUpdateCommand(class MimeKit.Cryptography.X509CrlRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CrlRecord" />
      </Parameters>
      <Docs>
        <param name="record">The CRL record.</param>
        <summary>
            Gets the database command to update the specified CRL record.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to update the specified CRL record.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="protected abstract System.Data.IDbCommand GetUpdateCommand (MimeKit.Cryptography.X509CertificateRecord record, MimeKit.Cryptography.X509CertificateRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDbCommand GetUpdateCommand(class MimeKit.Cryptography.X509CertificateRecord record, valuetype MimeKit.Cryptography.X509CertificateRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CertificateRecord" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CertificateRecordFields" />
      </Parameters>
      <Docs>
        <param name="record">The certificate record.</param>
        <param name="fields">The fields to update.</param>
        <summary>
            Gets the database command to update the specified record.
            </summary>
        <returns>The database command.</returns>
        <remarks>
            Gets the database command to update the specified record.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected object GetValue (MimeKit.Cryptography.X509CertificateRecord record, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetValue(class MimeKit.Cryptography.X509CertificateRecord record, string columnName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CertificateRecord" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="record">The certificate record.</param>
        <param name="columnName">The column name.</param>
        <summary>
            Gets the value for the specified column.
            </summary>
        <returns>The value.</returns>
        <remarks>
            Gets the value for the specified column.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="columnName" /> is not a known column name.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected static object GetValue (MimeKit.Cryptography.X509CrlRecord record, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetValue(class MimeKit.Cryptography.X509CrlRecord record, string columnName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CrlRecord" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="record">The CRL record.</param>
        <param name="columnName">The column name.</param>
        <summary>
            Gets the value for the specified column.
            </summary>
        <returns>The value.</returns>
        <remarks>
            Gets the value for the specified column.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="columnName" /> is not a known column name.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Org.BouncyCastle.X509.Store.IX509Store.GetMatches">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IX509Store.GetMatches (Org.BouncyCastle.X509.Store.IX509Selector selector);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection Org.BouncyCastle.X509.Store.IX509Store.GetMatches(class Org.BouncyCastle.X509.Store.IX509Selector selector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Org.BouncyCastle.X509.Store.IX509Selector" />
      </Parameters>
      <Docs>
        <param name="selector">The match criteria.</param>
        <summary>
            Gets a collection of matching certificates matching the specified selector.
            </summary>
        <returns>The matching certificates.</returns>
        <remarks>
            Gets a collection of matching certificates matching the specified selector.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (MimeKit.Cryptography.X509CertificateRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class MimeKit.Cryptography.X509CertificateRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CertificateRecord" />
      </Parameters>
      <Docs>
        <param name="record">The certificate record.</param>
        <summary>
            Remove the specified certificate record.
            </summary>
        <remarks>
            Removes the specified certificate record from the database.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="record" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (MimeKit.Cryptography.X509CrlRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class MimeKit.Cryptography.X509CrlRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CrlRecord" />
      </Parameters>
      <Docs>
        <param name="record">The CRL record.</param>
        <summary>
            Remove the specified CRL record.
            </summary>
        <remarks>
            Removes the specified CRL record from the database.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="record" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (MimeKit.Cryptography.X509CrlRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class MimeKit.Cryptography.X509CrlRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CrlRecord" />
      </Parameters>
      <Docs>
        <param name="record">The CRL record.</param>
        <summary>
            Update the specified CRL record.
            </summary>
        <remarks>
            Updates the specified fields of the record in the database.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="record" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (MimeKit.Cryptography.X509CertificateRecord record, MimeKit.Cryptography.X509CertificateRecordFields fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class MimeKit.Cryptography.X509CertificateRecord record, valuetype MimeKit.Cryptography.X509CertificateRecordFields fields) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="MimeKit.Cryptography.X509CertificateRecord" />
        <Parameter Name="fields" Type="MimeKit.Cryptography.X509CertificateRecordFields" />
      </Parameters>
      <Docs>
        <param name="record">The certificate record.</param>
        <param name="fields">The fields to update.</param>
        <summary>
            Update the specified certificate record.
            </summary>
        <remarks>
            Updates the specified fields of the record in the database.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="record" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
