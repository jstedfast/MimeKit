<Type Name="MultipartSigned" FullName="MimeKit.Cryptography.MultipartSigned">
  <TypeSignature Language="C#" Value="public class MultipartSigned : MimeKit.Multipart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultipartSigned extends MimeKit.Multipart" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MimeKit.Multipart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A signed multipart, as used by both S/MIME and PGP/MIME protocols.
            </summary>
    <remarks>
            The first child of a multipart/signed is the content while the second child
            is the detached signature data. Any other children are not defined and could
            be anything.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartSigned ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Cryptography.MultipartSigned" /> class.
            </summary>
        <remarks>
            Creates a new <see cref="T:MimeKit.Cryptography.MultipartSigned" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartSigned (MimeKit.MimeEntityConstructorInfo entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MimeKit.MimeEntityConstructorInfo entity) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entity" Type="MimeKit.MimeEntityConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="entity">Information used by the constructor.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Cryptography.MultipartSigned" /> class.
            </summary>
        <remarks>This constructor is used by <see cref="T:MimeKit.MimeParser" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MimeKit.Cryptography.MultipartSigned Create (MimeKit.Cryptography.CmsSigner signer, MimeKit.MimeEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.Cryptography.MultipartSigned Create(class MimeKit.Cryptography.CmsSigner signer, class MimeKit.MimeEntity entity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.MultipartSigned</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="MimeKit.Cryptography.CmsSigner" />
        <Parameter Name="entity" Type="MimeKit.MimeEntity" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="entity">The entity to sign.</param>
        <summary>
            Creates a new <see cref="T:MimeKit.Cryptography.MultipartSigned" />.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.MultipartSigned" /> instance.</returns>
        <remarks>
            Cryptographically signs the entity using the supplied signer in order
            to generate a detached signature and then adds the entity along with
            the detached signature data to a new multipart/signed part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="entity" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            A cryptography context suitable for signing could not be found.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MimeKit.Cryptography.MultipartSigned Create (MimeKit.Cryptography.SecureMimeContext ctx, MimeKit.Cryptography.CmsSigner signer, MimeKit.MimeEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.Cryptography.MultipartSigned Create(class MimeKit.Cryptography.SecureMimeContext ctx, class MimeKit.Cryptography.CmsSigner signer, class MimeKit.MimeEntity entity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.MultipartSigned</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MimeKit.Cryptography.SecureMimeContext" />
        <Parameter Name="signer" Type="MimeKit.Cryptography.CmsSigner" />
        <Parameter Name="entity" Type="MimeKit.MimeEntity" />
      </Parameters>
      <Docs>
        <param name="ctx">The S/MIME context to use for signing.</param>
        <param name="signer">The signer.</param>
        <param name="entity">The entity to sign.</param>
        <summary>
            Creates a new <see cref="T:MimeKit.Cryptography.MultipartSigned" />.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.MultipartSigned" /> instance.</returns>
        <remarks>
            Cryptographically signs the entity using the supplied signer in order
            to generate a detached signature and then adds the entity along with
            the detached signature data to a new multipart/signed part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="ctx" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="entity" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MimeKit.Cryptography.MultipartSigned Create (Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey signer, MimeKit.Cryptography.DigestAlgorithm digestAlgo, MimeKit.MimeEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.Cryptography.MultipartSigned Create(class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey signer, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo, class MimeKit.MimeEntity entity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.MultipartSigned</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
        <Parameter Name="entity" Type="MimeKit.MimeEntity" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="digestAlgo">The digest algorithm to use for signing.</param>
        <param name="entity">The entity to sign.</param>
        <summary>
            Creates a new <see cref="T:MimeKit.Cryptography.MultipartSigned" />.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.MultipartSigned" /> instance.</returns>
        <remarks>
            Cryptographically signs the entity using the supplied signer and digest algorithm in
            order to generate a detached signature and then adds the entity along with the
            detached signature data to a new multipart/signed part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="entity" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="signer" /> cannot be used for signing.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="digestAlgo" /> was out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>A cryptography context suitable for signing could not be found.</para>
          <para>-or-</para>
          <para>The <paramref name="digestAlgo" /> is not supported.</para>
        </exception>
        <exception cref="T:Org.BouncyCastle.Bcpg.OpenPgp.PgpException">
            An error occurred in the OpenPGP subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MimeKit.Cryptography.MultipartSigned Create (MimeKit.Cryptography.CryptographyContext ctx, MimeKit.MailboxAddress signer, MimeKit.Cryptography.DigestAlgorithm digestAlgo, MimeKit.MimeEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.Cryptography.MultipartSigned Create(class MimeKit.Cryptography.CryptographyContext ctx, class MimeKit.MailboxAddress signer, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo, class MimeKit.MimeEntity entity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.MultipartSigned</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MimeKit.Cryptography.CryptographyContext" />
        <Parameter Name="signer" Type="MimeKit.MailboxAddress" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
        <Parameter Name="entity" Type="MimeKit.MimeEntity" />
      </Parameters>
      <Docs>
        <param name="ctx">The cryptography context to use for signing.</param>
        <param name="signer">The signer.</param>
        <param name="digestAlgo">The digest algorithm to use for signing.</param>
        <param name="entity">The entity to sign.</param>
        <summary>
            Creates a new <see cref="T:MimeKit.Cryptography.MultipartSigned" />.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.MultipartSigned" /> instance.</returns>
        <remarks>
            Cryptographically signs the entity using the supplied signer and digest algorithm in
            order to generate a detached signature and then adds the entity along with the
            detached signature data to a new multipart/signed part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="ctx" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="entity" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A signing certificate could not be found for <paramref name="signer" />.
            </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
            An error occurred while signing.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="digestAlgo" /> was out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The <paramref name="digestAlgo" /> is not supported.
            </exception>
        <exception cref="T:MimeKit.Cryptography.PrivateKeyNotFoundException">
            The private key could not be found for <paramref name="signer" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MimeKit.Cryptography.MultipartSigned Create (MimeKit.Cryptography.OpenPgpContext ctx, Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey signer, MimeKit.Cryptography.DigestAlgorithm digestAlgo, MimeKit.MimeEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.Cryptography.MultipartSigned Create(class MimeKit.Cryptography.OpenPgpContext ctx, class Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey signer, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo, class MimeKit.MimeEntity entity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.MultipartSigned</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MimeKit.Cryptography.OpenPgpContext" />
        <Parameter Name="signer" Type="Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
        <Parameter Name="entity" Type="MimeKit.MimeEntity" />
      </Parameters>
      <Docs>
        <param name="ctx">The OpenPGP context to use for signing.</param>
        <param name="signer">The signer.</param>
        <param name="digestAlgo">The digest algorithm to use for signing.</param>
        <param name="entity">The entity to sign.</param>
        <summary>
            Creates a new <see cref="T:MimeKit.Cryptography.MultipartSigned" />.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.MultipartSigned" /> instance.</returns>
        <remarks>
            Cryptographically signs the entity using the supplied signer and digest algorithm in
            order to generate a detached signature and then adds the entity along with the
            detached signature data to a new multipart/signed part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="ctx" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="entity" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="signer" /> cannot be used for signing.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="digestAlgo" /> was out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The <paramref name="digestAlgo" /> is not supported.
            </exception>
        <exception cref="T:Org.BouncyCastle.Bcpg.OpenPgp.PgpException">
            An error occurred in the OpenPGP subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.DigitalSignatureCollection Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.Cryptography.DigitalSignatureCollection Verify() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.DigitalSignatureCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Verifies the multipart/signed part.
            </summary>
        <returns>A signer info collection.</returns>
        <remarks>
            Verifies the multipart/signed part using the default cryptography context.
            </remarks>
        <exception cref="T:System.FormatException">
          <para>The <c>protocol</c> parameter was not specified.</para>
          <para>-or-</para>
          <para>The multipart is malformed in some way.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            A cryptography context suitable for verifying the signature could not be found.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.DigitalSignatureCollection Verify (MimeKit.Cryptography.CryptographyContext ctx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.Cryptography.DigitalSignatureCollection Verify(class MimeKit.Cryptography.CryptographyContext ctx) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.DigitalSignatureCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MimeKit.Cryptography.CryptographyContext" />
      </Parameters>
      <Docs>
        <param name="ctx">The cryptography context to use for verifying the signature.</param>
        <summary>
            Verifies the multipart/signed part.
            </summary>
        <returns>A signer info collection.</returns>
        <remarks>
            Verifies the multipart/signed part using the supplied cryptography context.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ctx" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.FormatException">
            The multipart is malformed in some way.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="ctx" /> does not support verifying the signature part.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
