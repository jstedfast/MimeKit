<Type Name="SecureMimeContext" FullName="MimeKit.Cryptography.SecureMimeContext">
  <TypeSignature Language="C#" Value="public abstract class SecureMimeContext : MimeKit.Cryptography.CryptographyContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract SecureMimeContext extends MimeKit.Cryptography.CryptographyContext" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MimeKit.Cryptography.CryptographyContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Secure MIME (S/MIME) cryptography context.
            </summary>
    <remarks>
            Generally speaking, applications should not use a <see cref="T:MimeKit.Cryptography.SecureMimeContext" />
            directly, but rather via higher level APIs such as <see cref="T:MimeKit.Cryptography.MultipartSigned" />
            and <see cref="T:MimeKit.Cryptography.ApplicationPkcs7Mime" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecureMimeContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Cryptography.SecureMimeContext" /> class.
            </summary>
        <remarks>
          <para>Enables the following encryption algorithms by default:</para>
          <list type="bullet">
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.EncryptionAlgorithm.Camellia256" />
              </term>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.EncryptionAlgorithm.Camellia192" />
              </term>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.EncryptionAlgorithm.Camellia128" />
              </term>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.EncryptionAlgorithm.Aes256" />
              </term>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.EncryptionAlgorithm.Aes192" />
              </term>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.EncryptionAlgorithm.Aes128" />
              </term>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.EncryptionAlgorithm.Cast5" />
              </term>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.EncryptionAlgorithm.Idea" />
              </term>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.EncryptionAlgorithm.TripleDes" />
              </term>
            </item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compress">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.ApplicationPkcs7Mime Compress (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.Cryptography.ApplicationPkcs7Mime Compress(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.ApplicationPkcs7Mime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream to compress.</param>
        <summary>
            Compresses the specified stream.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.ApplicationPkcs7Mime" /> instance
            containing the compressed content.</returns>
        <remarks>
            Compresses the specified stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Decompress">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity Decompress (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.MimeEntity Decompress(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream to decompress.</param>
        <summary>
            Decompress the specified stream.
            </summary>
        <returns>The decompressed mime part.</returns>
        <remarks>
            Decompress the specified stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public override MimeKit.MimeEntity Decrypt (System.IO.Stream encryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimeEntity Decrypt(class System.IO.Stream encryptedData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="encryptedData">The encrypted data.</param>
        <summary>
            Decrypts the specified encryptedData.
            </summary>
        <returns>The decrypted <see cref="T:MimeKit.MimeEntity" />.</returns>
        <remarks>
            Decrypts the specified encryptedData.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encryptedData" /> is <c>null</c>.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Disable">
      <MemberSignature Language="C#" Value="public void Disable (MimeKit.Cryptography.EncryptionAlgorithm algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Disable(valuetype MimeKit.Cryptography.EncryptionAlgorithm algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="MimeKit.Cryptography.EncryptionAlgorithm" />
      </Parameters>
      <Docs>
        <param name="algorithm">The encryption algorithm.</param>
        <summary>
            Disables the encryption algorithm.
            </summary>
        <remarks>
            Disables the encryption algorithm.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public void Enable (MimeKit.Cryptography.EncryptionAlgorithm algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enable(valuetype MimeKit.Cryptography.EncryptionAlgorithm algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="MimeKit.Cryptography.EncryptionAlgorithm" />
      </Parameters>
      <Docs>
        <param name="algorithm">The encryption algorithm.</param>
        <summary>
            Enables the encryption algorithm.
            </summary>
        <remarks>
            Enables the encryption algorithm.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledEncryptionAlgorithms">
      <MemberSignature Language="C#" Value="protected MimeKit.Cryptography.EncryptionAlgorithm[] EnabledEncryptionAlgorithms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MimeKit.Cryptography.EncryptionAlgorithm[] EnabledEncryptionAlgorithms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.EncryptionAlgorithm[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the enabled encryption algorithms in ranked order.
            </summary>
        <value>The enabled encryption algorithms.</value>
        <remarks>
            Gets the enabled encryption algorithms in ranked order.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncapsulatedSign">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.ApplicationPkcs7Mime EncapsulatedSign (MimeKit.Cryptography.CmsSigner signer, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.Cryptography.ApplicationPkcs7Mime EncapsulatedSign(class MimeKit.Cryptography.CmsSigner signer, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.ApplicationPkcs7Mime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="MimeKit.Cryptography.CmsSigner" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="content">The content.</param>
        <summary>
            Cryptographically signs and encapsulates the content using the specified signer.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.ApplicationPkcs7Mime" /> instance
            containing the detached signature data.</returns>
        <remarks>
            Cryptographically signs and encapsulates the content using the specified signer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EncapsulatedSign">
      <MemberSignature Language="C#" Value="public virtual MimeKit.Cryptography.ApplicationPkcs7Mime EncapsulatedSign (MimeKit.MailboxAddress signer, MimeKit.Cryptography.DigestAlgorithm digestAlgo, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.Cryptography.ApplicationPkcs7Mime EncapsulatedSign(class MimeKit.MailboxAddress signer, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.ApplicationPkcs7Mime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="MimeKit.MailboxAddress" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="digestAlgo">The digest algorithm to use for signing.</param>
        <param name="content">The content.</param>
        <summary>
            Cryptographically signs and encapsulates the content using the specified signer and digest algorithm.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.ApplicationPkcs7Mime" /> instance
            containing the detached signature data.</returns>
        <remarks>
            Cryptographically signs and encapsulates the content using the specified signer and digest algorithm.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="digestAlgo" /> is out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The specified <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> is not supported by this context.
            </exception>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A signing certificate could not be found for <paramref name="signer" />.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.ApplicationPkcs7Mime Encrypt (MimeKit.Cryptography.CmsRecipientCollection recipients, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.Cryptography.ApplicationPkcs7Mime Encrypt(class MimeKit.Cryptography.CmsRecipientCollection recipients, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.ApplicationPkcs7Mime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipients" Type="MimeKit.Cryptography.CmsRecipientCollection" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="recipients">The recipients.</param>
        <param name="content">The content.</param>
        <summary>
            Encrypts the specified content for the specified recipients.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.ApplicationPkcs7Mime" /> instance
            containing the encrypted content.</returns>
        <remarks>
            Encrypts the specified content for the specified recipients.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="recipients" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public override MimeKit.MimePart Encrypt (System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt; recipients, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimePart Encrypt(class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MailboxAddress&gt; recipients, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipients" Type="System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt;" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="recipients">The recipients.</param>
        <param name="content">The content.</param>
        <summary>
            Encrypts the specified content for the specified recipients.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance
            containing the encrypted data.</returns>
        <remarks>
            Encrypts the specified content for the specified recipients.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="recipients" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
            A certificate for one or more of the <paramref name="recipients" /> could not be found.
            </exception>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A certificate could not be found for one or more of the <paramref name="recipients" />.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithmRank">
      <MemberSignature Language="C#" Value="protected virtual MimeKit.Cryptography.EncryptionAlgorithm[] EncryptionAlgorithmRank { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MimeKit.Cryptography.EncryptionAlgorithm[] EncryptionAlgorithmRank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.EncryptionAlgorithm[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the preferred rank order for the encryption algorithms; from the strongest to the weakest.
            </summary>
        <value>The preferred encryption algorithm ranking.</value>
        <remarks>
            Gets the preferred rank order for the encryption algorithms; from the strongest to the weakest.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProtocol">
      <MemberSignature Language="C#" Value="public override string EncryptionProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the encryption protocol.
            </summary>
        <value>The encryption protocol.</value>
        <remarks>
          <para>The encryption protocol is used by <see cref="T:MimeKit.Cryptography.MultipartEncrypted" />
            in order to determine what the protocol parameter of the Content-Type
            header should be.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override MimeKit.MimePart Export (System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt; mailboxes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimePart Export(class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MailboxAddress&gt; mailboxes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailboxes" Type="System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt;" />
      </Parameters>
      <Docs>
        <param name="mailboxes">The mailboxes.</param>
        <summary>
            Exports the certificates for the specified mailboxes.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.ApplicationPkcs7Mime" /> instance containing
            the exported keys.</returns>
        <remarks>
            Exports the certificates for the specified mailboxes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mailboxes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            No mailboxes were specified.
            </exception>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A certificate for one or more of the <paramref name="mailboxes" /> could not be found.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificate">
      <MemberSignature Language="C#" Value="protected abstract Org.BouncyCastle.X509.X509Certificate GetCertificate (Org.BouncyCastle.X509.Store.IX509Selector selector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.BouncyCastle.X509.X509Certificate GetCertificate(class Org.BouncyCastle.X509.Store.IX509Selector selector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.X509.X509Certificate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Org.BouncyCastle.X509.Store.IX509Selector" />
      </Parameters>
      <Docs>
        <param name="selector">The search criteria for the certificate.</param>
        <summary>
            Gets the X.509 certificate matching the specified selector.
            </summary>
        <returns>The certificate on success; otherwise <c>null</c>.</returns>
        <remarks>
            Gets the first certificate that matches the specified selector.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateRevocationLists">
      <MemberSignature Language="C#" Value="protected abstract Org.BouncyCastle.X509.Store.IX509Store GetCertificateRevocationLists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.BouncyCastle.X509.Store.IX509Store GetCertificateRevocationLists() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.X509.Store.IX509Store</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the certificate revocation lists.
            </summary>
        <returns>The certificate revocation lists.</returns>
        <remarks>
            A Certificate Revocation List (CRL) is a list of certificate serial numbers issued
            by a particular Certificate Authority (CA) that have been revoked, either by the CA
            itself or by the owner of the revoked certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCmsRecipient">
      <MemberSignature Language="C#" Value="protected abstract MimeKit.Cryptography.CmsRecipient GetCmsRecipient (MimeKit.MailboxAddress mailbox);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class MimeKit.Cryptography.CmsRecipient GetCmsRecipient(class MimeKit.MailboxAddress mailbox) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.CmsRecipient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailbox" Type="MimeKit.MailboxAddress" />
      </Parameters>
      <Docs>
        <param name="mailbox">The mailbox.</param>
        <summary>
            Gets the <see cref="T:MimeKit.Cryptography.CmsRecipient" /> for the specified mailbox.
            </summary>
        <returns>A <see cref="T:MimeKit.Cryptography.CmsRecipient" />.</returns>
        <remarks>
          <para>Constructs a <see cref="T:MimeKit.Cryptography.CmsRecipient" /> with the appropriate certificate and
            <see cref="P:MimeKit.Cryptography.CmsRecipient.EncryptionAlgorithms" /> for the specified mailbox.</para>
          <para>If the mailbox is a <see cref="T:MimeKit.Cryptography.SecureMailboxAddress" />, the
            <see cref="P:MimeKit.Cryptography.SecureMailboxAddress.Fingerprint" /> property will be used instead of
            the mailbox address.</para>
        </remarks>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A certificate for the specified <paramref name="mailbox" /> could not be found.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCmsRecipients">
      <MemberSignature Language="C#" Value="protected MimeKit.Cryptography.CmsRecipientCollection GetCmsRecipients (System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt; mailboxes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class MimeKit.Cryptography.CmsRecipientCollection GetCmsRecipients(class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MailboxAddress&gt; mailboxes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.CmsRecipientCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailboxes" Type="System.Collections.Generic.IEnumerable&lt;MimeKit.MailboxAddress&gt;" />
      </Parameters>
      <Docs>
        <param name="mailboxes">The mailboxes.</param>
        <summary>
            Gets a collection of CmsRecipients for the specified mailboxes.
            </summary>
        <returns>A <see cref="T:MimeKit.Cryptography.CmsRecipientCollection" />.</returns>
        <remarks>
            Gets a collection of CmsRecipients for the specified mailboxes.
            </remarks>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A certificate for one or more of the specified <paramref name="mailboxes" /> could not be found.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mailboxes" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCmsSigner">
      <MemberSignature Language="C#" Value="protected abstract MimeKit.Cryptography.CmsSigner GetCmsSigner (MimeKit.MailboxAddress mailbox, MimeKit.Cryptography.DigestAlgorithm digestAlgo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class MimeKit.Cryptography.CmsSigner GetCmsSigner(class MimeKit.MailboxAddress mailbox, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.CmsSigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mailbox" Type="MimeKit.MailboxAddress" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
      </Parameters>
      <Docs>
        <param name="mailbox">The mailbox.</param>
        <param name="digestAlgo">The preferred digest algorithm.</param>
        <summary>
            Gets the <see cref="T:MimeKit.Cryptography.CmsSigner" /> for the specified mailbox.
            </summary>
        <returns>A <see cref="T:MimeKit.Cryptography.CmsSigner" />.</returns>
        <remarks>
          <para>Constructs a <see cref="T:MimeKit.Cryptography.CmsSigner" /> with the appropriate signing certificate
            for the specified mailbox.</para>
          <para>If the mailbox is a <see cref="T:MimeKit.Cryptography.SecureMailboxAddress" />, the
            <see cref="P:MimeKit.Cryptography.SecureMailboxAddress.Fingerprint" /> property will be used instead of
            the mailbox address for database lookups.</para>
        </remarks>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A certificate for the specified <paramref name="mailbox" /> could not be found.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDigestAlgorithm">
      <MemberSignature Language="C#" Value="public override MimeKit.Cryptography.DigestAlgorithm GetDigestAlgorithm (string micalg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype MimeKit.Cryptography.DigestAlgorithm GetDigestAlgorithm(string micalg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.DigestAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="micalg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="micalg">The micalg parameter value.</param>
        <summary>
            Gets the digest algorithm from the micalg parameter value in a multipart/signed part.
            </summary>
        <returns>The digest algorithm.</returns>
        <remarks>
            Maps the micalg parameter value string back to the appropriate <see cref="T:MimeKit.Cryptography.DigestAlgorithm" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="micalg" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDigestAlgorithmName">
      <MemberSignature Language="C#" Value="public override string GetDigestAlgorithmName (MimeKit.Cryptography.DigestAlgorithm micalg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDigestAlgorithmName(valuetype MimeKit.Cryptography.DigestAlgorithm micalg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="micalg" Type="MimeKit.Cryptography.DigestAlgorithm" />
      </Parameters>
      <Docs>
        <param name="micalg">The digest algorithm.</param>
        <summary>
            Gets the string name of the digest algorithm for use with the micalg parameter of a multipart/signed part.
            </summary>
        <returns>The micalg value.</returns>
        <remarks>
          <para>Maps the <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> to the appropriate string identifier
            as used by the micalg parameter value of a multipart/signed Content-Type
            header. For example:</para>
          <list type="table">
            <listheader>
              <term>Algorithm</term>
              <description>Name</description>
            </listheader>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.MD5" />
              </term>
              <description>md5</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha1" />
              </term>
              <description>sha-1</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha224" />
              </term>
              <description>sha-224</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha256" />
              </term>
              <description>sha-256</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha384" />
              </term>
              <description>sha-384</description>
            </item>
            <item>
              <term>
                <see cref="F:MimeKit.Cryptography.DigestAlgorithm.Sha512" />
              </term>
              <description>sha-512</description>
            </item>
          </list>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="micalg" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDigestOid">
      <MemberSignature Language="C#" Value="protected static string GetDigestOid (MimeKit.Cryptography.DigestAlgorithm digestAlgo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetDigestOid(valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
      </Parameters>
      <Docs>
        <param name="digestAlgo">The digest algorithm.</param>
        <summary>
            Gets the OID for the digest algorithm.
            </summary>
        <returns>The digest oid.</returns>
        <remarks>
            Gets the OID for the digest algorithm.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="digestAlgo" /> is out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The specified <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> is not supported by this context.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntermediateCertificates">
      <MemberSignature Language="C#" Value="protected abstract Org.BouncyCastle.X509.Store.IX509Store GetIntermediateCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.BouncyCastle.X509.Store.IX509Store GetIntermediateCertificates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.X509.Store.IX509Store</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the intermediate certificates.
            </summary>
        <returns>The intermediate certificates.</returns>
        <remarks>
            An intermediate certificate is any certificate that exists between the root
            certificate issued by a Certificate Authority (CA) and the certificate at
            the end of the chain.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="protected virtual MimeKit.Cryptography.EncryptionAlgorithm GetPreferredEncryptionAlgorithm (MimeKit.Cryptography.CmsRecipientCollection recipients);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype MimeKit.Cryptography.EncryptionAlgorithm GetPreferredEncryptionAlgorithm(class MimeKit.Cryptography.CmsRecipientCollection recipients) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipients" Type="MimeKit.Cryptography.CmsRecipientCollection" />
      </Parameters>
      <Docs>
        <param name="recipients">The recipients.</param>
        <summary>
            Gets the preferred encryption algorithm to use for encrypting to the specified recipients.
            </summary>
        <returns>The preferred encryption algorithm.</returns>
        <remarks>
          <para>Gets the preferred encryption algorithm to use for encrypting to the specified recipients
            based on the encryption algorithms supported by each of the recipients, the
            <see cref="P:MimeKit.Cryptography.SecureMimeContext.EnabledEncryptionAlgorithms" />, and the <see cref="P:MimeKit.Cryptography.SecureMimeContext.EncryptionAlgorithmRank" />.</para>
          <para>If the supported encryption algorithms are unknown for any recipient, it is assumed that
            the recipient supports at least the Triple-DES encryption algorithm.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateKey">
      <MemberSignature Language="C#" Value="protected abstract Org.BouncyCastle.Crypto.AsymmetricKeyParameter GetPrivateKey (Org.BouncyCastle.X509.Store.IX509Selector selector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.BouncyCastle.Crypto.AsymmetricKeyParameter GetPrivateKey(class Org.BouncyCastle.X509.Store.IX509Selector selector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.Crypto.AsymmetricKeyParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Org.BouncyCastle.X509.Store.IX509Selector" />
      </Parameters>
      <Docs>
        <param name="selector">The search criteria for the private key.</param>
        <summary>
            Gets the private key for the certificate matching the specified selector.
            </summary>
        <returns>The private key on success; otherwise <c>null</c>.</returns>
        <remarks>
            Gets the private key for the first certificate that matches the specified selector.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrustedAnchors">
      <MemberSignature Language="C#" Value="protected abstract Org.BouncyCastle.Utilities.Collections.HashSet GetTrustedAnchors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Org.BouncyCastle.Utilities.Collections.HashSet GetTrustedAnchors() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Org.BouncyCastle.Utilities.Collections.HashSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the trusted anchors.
            </summary>
        <returns>The trusted anchors.</returns>
        <remarks>
            A trusted anchor is a trusted root-level X.509 certificate,
            generally issued by a certificate authority (CA).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public abstract void Import (Org.BouncyCastle.X509.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Import(class Org.BouncyCastle.X509.X509Certificate certificate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="Org.BouncyCastle.X509.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">The certificate.</param>
        <summary>
            Imports the specified certificate.
            </summary>
        <remarks>
            Imports the specified certificate.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public abstract void Import (Org.BouncyCastle.X509.X509Crl crl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Import(class Org.BouncyCastle.X509.X509Crl crl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="crl" Type="Org.BouncyCastle.X509.X509Crl" />
      </Parameters>
      <Docs>
        <param name="crl">The certificate revocation list.</param>
        <summary>
            Imports the specified certificate revocation list.
            </summary>
        <remarks>
            Imports the specified certificate revocation list.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="crl" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The raw key data.</param>
        <summary>
            Imports certificates (as from a certs-only application/pkcs-mime part)
            from the specified stream.
            </summary>
        <remarks>
            Imports certificates (as from a certs-only application/pkcs-mime part)
            from the specified stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public abstract void Import (System.IO.Stream stream, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Import(class System.IO.Stream stream, string password) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">The raw certificate and key data.</param>
        <param name="password">The password to unlock the stream.</param>
        <summary>
            Imports certificates and keys from a pkcs12-encoded stream.
            </summary>
        <remarks>
            Imports certificates and keys from a pkcs12-encoded stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="stream" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="password" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            Importing keys is not supported by this cryptography context.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (MimeKit.Cryptography.EncryptionAlgorithm algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype MimeKit.Cryptography.EncryptionAlgorithm algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="MimeKit.Cryptography.EncryptionAlgorithm" />
      </Parameters>
      <Docs>
        <param name="algorithm">Algorithm.</param>
        <summary>
            Checks whether the specified encryption algorithm is enabled.
            </summary>
        <returns>
          <c>true</c> if the specified encryption algorithm is enabled; otherwise, <c>false</c>.</returns>
        <remarks>
            Determines whether the specified encryption algorithm is enabled.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeProtocol">
      <MemberSignature Language="C#" Value="public override string KeyExchangeProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the key exchange protocol.
            </summary>
        <value>The key exchange protocol.</value>
        <remarks>
            Gets the key exchange protocol.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.ApplicationPkcs7Signature Sign (MimeKit.Cryptography.CmsSigner signer, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.Cryptography.ApplicationPkcs7Signature Sign(class MimeKit.Cryptography.CmsSigner signer, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.ApplicationPkcs7Signature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="MimeKit.Cryptography.CmsSigner" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="content">The content.</param>
        <summary>
            Cryptographically signs the content using the specified signer.
            </summary>
        <returns>A new <see cref="T:MimeKit.Cryptography.ApplicationPkcs7Signature" /> instance
            containing the detached signature data.</returns>
        <remarks>
            Cryptographically signs the content using the specified signer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public override MimeKit.MimePart Sign (MimeKit.MailboxAddress signer, MimeKit.Cryptography.DigestAlgorithm digestAlgo, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.MimePart Sign(class MimeKit.MailboxAddress signer, valuetype MimeKit.Cryptography.DigestAlgorithm digestAlgo, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="MimeKit.MailboxAddress" />
        <Parameter Name="digestAlgo" Type="MimeKit.Cryptography.DigestAlgorithm" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="signer">The signer.</param>
        <param name="digestAlgo">The digest algorithm to use for signing.</param>
        <param name="content">The content.</param>
        <summary>
            Cryptographically signs the content using the specified signer and digest algorithm.
            </summary>
        <returns>A new <see cref="T:MimeKit.MimePart" /> instance
            containing the detached signature data.</returns>
        <remarks>
            Cryptographically signs the content using the specified signer and digest algorithm.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="signer" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="digestAlgo" /> is out of range.
            </exception>
        <exception cref="T:System.NotSupportedException">
            The specified <see cref="T:MimeKit.Cryptography.DigestAlgorithm" /> is not supported by this context.
            </exception>
        <exception cref="T:MimeKit.Cryptography.CertificateNotFoundException">
            A signing certificate could not be found for <paramref name="signer" />.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureProtocol">
      <MemberSignature Language="C#" Value="public override string SignatureProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the signature protocol.
            </summary>
        <value>The signature protocol.</value>
        <remarks>
          <para>The signature protocol is used by <see cref="T:MimeKit.Cryptography.MultipartSigned" />
            in order to determine what the protocol parameter of the Content-Type
            header should be.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public override bool Supports (string protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Supports(string protocol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="protocol">The protocol.</param>
        <summary>
            Checks whether or not the specified protocol is supported by the <see cref="T:MimeKit.Cryptography.CryptographyContext" />.
            </summary>
        <returns>
          <c>true</c> if the protocol is supported; otherwise <c>false</c></returns>
        <remarks>
            Used in order to make sure that the protocol parameter value specified in either a multipart/signed
            or multipart/encrypted part is supported by the supplied cryptography context.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="protocol" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="protected static bool TryGetEncryptionAlgorithm (Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier identifier, out MimeKit.Cryptography.EncryptionAlgorithm algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool TryGetEncryptionAlgorithm(class Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier identifier, valuetype MimeKit.Cryptography.EncryptionAlgorithm algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier" />
        <Parameter Name="algorithm" Type="MimeKit.Cryptography.EncryptionAlgorithm&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="identifier">The algorithm identifier.</param>
        <param name="algorithm">The encryption algorithm.</param>
        <summary>
            Attempts to map a <see cref="T:Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier" />
            to a <see cref="T:MimeKit.Cryptography.EncryptionAlgorithm" />.
            </summary>
        <returns>
          <c>true</c> if the algorithm identifier was successfully mapped; <c>false</c> otherwise.</returns>
        <remarks>
            Attempts to map a <see cref="T:Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier" />
            to a <see cref="T:MimeKit.Cryptography.EncryptionAlgorithm" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identifier" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecureMimeCapabilities">
      <MemberSignature Language="C#" Value="protected abstract void UpdateSecureMimeCapabilities (Org.BouncyCastle.X509.X509Certificate certificate, MimeKit.Cryptography.EncryptionAlgorithm[] algorithms, DateTime timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateSecureMimeCapabilities(class Org.BouncyCastle.X509.X509Certificate certificate, valuetype MimeKit.Cryptography.EncryptionAlgorithm[] algorithms, valuetype System.DateTime timestamp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="Org.BouncyCastle.X509.X509Certificate" />
        <Parameter Name="algorithms" Type="MimeKit.Cryptography.EncryptionAlgorithm[]" />
        <Parameter Name="timestamp" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="certificate">The certificate.</param>
        <param name="algorithms">The encryption algorithm capabilities of the client (in preferred order).</param>
        <param name="timestamp">The timestamp.</param>
        <summary>
            Updates the known S/MIME capabilities of the client used by the recipient that owns the specified certificate.
            </summary>
        <remarks>
            Updates the known S/MIME capabilities of the client used by the recipient that owns the specified certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public MimeKit.Cryptography.DigitalSignatureCollection Verify (System.IO.Stream signedData, out MimeKit.MimeEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MimeKit.Cryptography.DigitalSignatureCollection Verify(class System.IO.Stream signedData, class MimeKit.MimeEntity entity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.DigitalSignatureCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedData" Type="System.IO.Stream" />
        <Parameter Name="entity" Type="MimeKit.MimeEntity&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="signedData">The signed data.</param>
        <param name="entity">The unencapsulated entity.</param>
        <summary>
            Verifies the digital signatures of the specified signedData and extract the original content.
            </summary>
        <returns>The list of digital signatures.</returns>
        <remarks>
            Verifies the digital signatures of the specified signedData and extract the original content.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signedData" /> is <c>null</c>.
            </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public override MimeKit.Cryptography.DigitalSignatureCollection Verify (System.IO.Stream content, System.IO.Stream signatureData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class MimeKit.Cryptography.DigitalSignatureCollection Verify(class System.IO.Stream content, class System.IO.Stream signatureData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Cryptography.DigitalSignatureCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="signatureData" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content">The content.</param>
        <param name="signatureData">The detached signature data.</param>
        <summary>
            Verifies the specified content using the detached signatureData.
            </summary>
        <returns>A list of the digital signatures.</returns>
        <remarks>
            Verifies the specified content using the detached signatureData.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="signatureData" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:Org.BouncyCastle.Cms.CmsException">
            An error occurred in the cryptographic message syntax subsystem.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
