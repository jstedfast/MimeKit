<Type Name="TnefNameId" FullName="MimeKit.Tnef.TnefNameId">
  <TypeSignature Language="C#" Value="public struct TnefNameId" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TnefNameId extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A TNEF name identifier.
            </summary>
    <remarks>
            A TNEF name identifier.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TnefNameId (Guid propertySetGuid, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid propertySetGuid, int32 id) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertySetGuid" Type="System.Guid" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertySetGuid">The property set GUID.</param>
        <param name="id">The identifier.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Tnef.TnefNameId" /> struct.
            </summary>
        <remarks>
            Creates a new <see cref="T:MimeKit.Tnef.TnefNameId" /> with the specified integer identifier.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TnefNameId (Guid propertySetGuid, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid propertySetGuid, string name) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertySetGuid" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertySetGuid">The property set GUID.</param>
        <param name="name">The name.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Tnef.TnefNameId" /> struct.
            </summary>
        <remarks>
            Creates a new <see cref="T:MimeKit.Tnef.TnefNameId" /> with the specified string identifier.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:MimeKit.Tnef.TnefNameId" />.</param>
        <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:MimeKit.Tnef.TnefNameId" />.
            </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:MimeKit.Tnef.TnefNameId" />; otherwise, <c>false</c>.</returns>
        <remarks>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:MimeKit.Tnef.TnefNameId" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serves as a hash function for a <see cref="T:MimeKit.Tnef.TnefNameId" /> object.
            </summary>
        <returns>A hash code for this instance that is suitable for use in hashing algorithms
            and data structures such as a hash table.</returns>
        <remarks>
            Serves as a hash function for a <see cref="T:MimeKit.Tnef.TnefNameId" /> object.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the identifier, if available.
            </summary>
        <value>The identifier.</value>
        <remarks>
            If the <see cref="P:MimeKit.Tnef.TnefNameId.Kind" /> is <see cref="F:MimeKit.Tnef.TnefNameIdKind.Id" />, then this property will be available.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public MimeKit.Tnef.TnefNameIdKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MimeKit.Tnef.TnefNameIdKind Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Tnef.TnefNameIdKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the kind of TNEF name identifier.
            </summary>
        <value>The kind of identifier.</value>
        <remarks>
            Gets the kind of TNEF name identifier.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name, if available.
            </summary>
        <value>The name.</value>
        <remarks>
            If the <see cref="P:MimeKit.Tnef.TnefNameId.Kind" /> is <see cref="F:MimeKit.Tnef.TnefNameIdKind.Name" />, then this property will be available.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertySetGuid">
      <MemberSignature Language="C#" Value="public Guid PropertySetGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid PropertySetGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the property set GUID.
            </summary>
        <value>The property set GUID.</value>
        <remarks>
            Gets the property set GUID.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
