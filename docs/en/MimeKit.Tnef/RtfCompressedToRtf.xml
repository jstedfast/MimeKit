<Type Name="RtfCompressedToRtf" FullName="MimeKit.Tnef.RtfCompressedToRtf">
  <TypeSignature Language="C#" Value="public class RtfCompressedToRtf : MimeKit.IO.Filters.MimeFilterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RtfCompressedToRtf extends MimeKit.IO.Filters.MimeFilterBase" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.96.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MimeKit.IO.Filters.MimeFilterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A filter to decompress a compressed RTF stream.
            </summary>
    <remarks>
            Used to decompress a compressed RTF stream.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RtfCompressedToRtf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.Tnef.RtfCompressedToRtf" /> class.
            </summary>
        <remarks>
            Creates a new <see cref="T:MimeKit.Tnef.RtfCompressedToRtf" /> converter filter.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressionMode">
      <MemberSignature Language="C#" Value="public MimeKit.Tnef.RtfCompressionMode CompressionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MimeKit.Tnef.RtfCompressionMode CompressionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.Tnef.RtfCompressionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the compression mode.
            </summary>
        <value>The compression mode.</value>
        <remarks>
            At least 12 bytes from the stream must be processed before this property value will
            be accurate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override byte[] Filter (byte[] input, int startIndex, int length, out int outputIndex, out int outputLength, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] Filter(unsigned int8[] input, int32 startIndex, int32 length, int32 outputIndex, int32 outputLength, bool flush) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="outputIndex" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="outputLength" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">The input buffer.</param>
        <param name="startIndex">The starting index of the input buffer.</param>
        <param name="length">Length.</param>
        <param name="outputIndex">Output index.</param>
        <param name="outputLength">Output length.</param>
        <param name="flush">If set to <c>true</c> flush.</param>
        <summary>
            Filter the specified input.
            </summary>
        <returns>The filtered output.</returns>
        <remarks>Filters the specified input buffer starting at the given index,
            spanning across the specified number of bytes.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidCrc32">
      <MemberSignature Language="C#" Value="public bool IsValidCrc32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValidCrc32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the crc32 is valid.
            </summary>
        <value>
          <c>true</c> if the crc32 is valid; otherwise, <c>false</c>.</value>
        <remarks>
            Until all data has been processed, this property will always return <c>false</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resets the filter.
            </summary>
        <remarks>
            Resets the filter.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
