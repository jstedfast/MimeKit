<Type Name="MimeEntity" FullName="MimeKit.MimeEntity">
  <TypeSignature Language="C#" Value="public abstract class MimeEntity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeEntity extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An abstract MIME entity.
            </summary>
    <remarks>
      <para>A MIME entity is really just a node in a tree structure of MIME parts in a MIME message.</para>
      <para>There are 3 basic types of entities: <see cref="T:MimeKit.MimePart" />, <see cref="T:MimeKit.Multipart" />,
            and <see cref="T:MimeKit.MessagePart" /> (which is actually just a special variation of
            <see cref="T:MimeKit.MimePart" /> who's content is another MIME message/document). All other types are
            derivatives of one of those.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeEntity (MimeKit.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MimeKit.ContentType contentType) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentType" Type="MimeKit.ContentType" />
      </Parameters>
      <Docs>
        <param name="contentType">The content type.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.MimeEntity" /> class.
            </summary>
        <remarks>
            Initializes the <see cref="T:MimeKit.ContentType" /> to the one provided.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentType" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeEntity (MimeKit.MimeEntityConstructorInfo entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MimeKit.MimeEntityConstructorInfo entity) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entity" Type="MimeKit.MimeEntityConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="entity">Information used by the constructor.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.MimeEntity" /> class
            based on the <see cref="T:MimeKit.MimeEntityConstructorInfo" />.
            </summary>
        <remarks>
            Custom <see cref="T:MimeKit.MimeEntity" /> subclasses MUST implement this constructor
            in order to register it using <see cref="M:MimeKit.ParserOptions.RegisterMimeType(System.String,System.Type)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeEntity (string mediaType, string mediaSubtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string mediaType, string mediaSubtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="mediaSubtype" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type.</param>
        <param name="mediaSubtype">The media subtype.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.MimeEntity" /> class.
            </summary>
        <remarks>
            Initializes the <see cref="T:MimeKit.ContentType" /> based on the provided media type and subtype.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="mediaType" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="mediaSubtype" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentBase">
      <MemberSignature Language="C#" Value="public Uri ContentBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ContentBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the base content URI.
            </summary>
        <value>The base content URI or <c>null</c>.</value>
        <remarks>
          <para>The Content-Base header specifies the base URI for the <see cref="T:MimeKit.MimeEntity" />
            in cases where the <see cref="P:MimeKit.MimeEntity.ContentLocation" /> is a relative URI.</para>
          <para>The Content-Base URI must be an absolute URI.</para>
          <para>For more information, see http://www.ietf.org/rfc/rfc2110.txt</para>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is not an absolute URI.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentDisposition">
      <MemberSignature Language="C#" Value="public MimeKit.ContentDisposition ContentDisposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.ContentDisposition ContentDisposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentDisposition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content disposition.
            </summary>
        <value>The content disposition.</value>
        <remarks>
            Represents the pre-parsed Content-Disposition header value, if present.
            If the Content-Disposition header is not set, then this property will
            be <c>null</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentId">
      <MemberSignature Language="C#" Value="public string ContentId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content identifier.
            </summary>
        <value>The content identifier.</value>
        <remarks>
          <para>The Content-Id header is used for uniquely identifying a particular entity and
            uses the same syntax as the Message-Id header on MIME messages.</para>
          <para>Setting a Content-Id allows other <see cref="T:MimeKit.MimePart" /> objects within the same
            multipart/related container to reference this part by its unique identifier, typically
            by using a "cid:" URI in an HTML-formatted message body. This can be useful, for example,
            when the HTML-formatted message body needs to reference image attachments.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLocation">
      <MemberSignature Language="C#" Value="public Uri ContentLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ContentLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content location.
            </summary>
        <value>The content location or <c>null</c>.</value>
        <remarks>
          <para>The Content-Location header specifies the URI for a MIME entity and can be
            either absolute or relative.</para>
          <para>Setting a Content-Location URI allows other <see cref="T:MimeKit.MimePart" /> objects
            within the same multipart/related container to reference this part by URI. This
            can be useful, for example, when constructing an HTML message body that needs to
            reference image attachments.</para>
          <para>For more information, see http://www.ietf.org/rfc/rfc2110.txt</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public MimeKit.ContentType ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.ContentType ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the content.
            </summary>
        <value>The type of the content.</value>
        <remarks>
          <para>The Content-Type header specifies information about the type of content contained
            within the MIME entity.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public MimeKit.HeaderList Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.HeaderList Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.HeaderList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of headers.
            </summary>
        <value>The list of headers.</value>
        <remarks>
            Represents the list of headers for a MIME part. Typically, the headers of
            a MIME part will be various Content-* headers such as Content-Type or
            Content-Disposition, but may include just about anything.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>
            Loads a <see cref="T:MimeKit.MimeEntity" /> from the given stream, using the
            default <see cref="T:MimeKit.ParserOptions" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(string fileName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file to load.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified file.
            </summary>
        <returns>The parsed entity.</returns>
        <remarks>
            Loads a <see cref="T:MimeKit.MimeEntity" /> from the file at the give file path,
            using the default <see cref="T:MimeKit.ParserOptions" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The specified file path is empty.
            </exception>
        <exception cref="T:System.IO.FileNotFoundException">
            The specified file could not be found.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            The user does not have access to read the specified file.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ContentType contentType, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ContentType contentType, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="MimeKit.ContentType" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="contentType">The Content-Type of the stream.</param>
        <param name="content">The content stream.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified content stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>
            This method is mostly meant for use with APIs such as <see cref="T:System.Net.HttpWebResponse" />
            where the headers are parsed separately from the content.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="contentType" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ParserOptions options, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ParserOptions options, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="stream">The stream.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>
            Loads a <see cref="T:MimeKit.MimeEntity" /> from the given stream, using the
            specified <see cref="T:MimeKit.ParserOptions" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="stream" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ParserOptions options, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ParserOptions options, string fileName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="fileName">The name of the file to load.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified file.
            </summary>
        <returns>The parsed entity.</returns>
        <remarks>
            Loads a <see cref="T:MimeKit.MimeEntity" /> from the file at the give file path,
            using the specified <see cref="T:MimeKit.ParserOptions" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fileName" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
            The specified file path is empty.
            </exception>
        <exception cref="T:System.IO.FileNotFoundException">
            The specified file could not be found.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            The user does not have access to read the specified file.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (System.IO.Stream stream, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stream">The stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>
            Loads a <see cref="T:MimeKit.MimeEntity" /> from the given stream, using the
            default <see cref="T:MimeKit.ParserOptions" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (string fileName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(string fileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file to load.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified file.
            </summary>
        <returns>The parsed entity.</returns>
        <remarks>
            Loads a <see cref="T:MimeKit.MimeEntity" /> from the file at the give file path,
            using the default <see cref="T:MimeKit.ParserOptions" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The specified file path is empty.
            </exception>
        <exception cref="T:System.IO.FileNotFoundException">
            The specified file could not be found.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            The user does not have access to read the specified file.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ContentType contentType, System.IO.Stream content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ContentType contentType, class System.IO.Stream content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="MimeKit.ContentType" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="contentType">The Content-Type of the stream.</param>
        <param name="content">The content stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified content stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>
            This method is mostly meant for use with APIs such as <see cref="T:System.Net.HttpWebResponse" />
            where the headers are parsed separately from the content.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="contentType" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ParserOptions options, MimeKit.ContentType contentType, System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ParserOptions options, class MimeKit.ContentType contentType, class System.IO.Stream content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="contentType" Type="MimeKit.ContentType" />
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="contentType">The Content-Type of the stream.</param>
        <param name="content">The content stream.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified content stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>
            This method is mostly meant for use with APIs such as <see cref="T:System.Net.HttpWebResponse" />
            where the headers are parsed separately from the content.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="contentType" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ParserOptions options, System.IO.Stream stream, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ParserOptions options, class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="stream">The stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>
            Loads a <see cref="T:MimeKit.MimeEntity" /> from the given stream, using the
            specified <see cref="T:MimeKit.ParserOptions" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="stream" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ParserOptions options, string fileName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ParserOptions options, string fileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="fileName">The name of the file to load.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified file.
            </summary>
        <returns>The parsed entity.</returns>
        <remarks>
            Loads a <see cref="T:MimeKit.MimeEntity" /> from the file at the give file path,
            using the specified <see cref="T:MimeKit.ParserOptions" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fileName" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
            The specified file path is empty.
            </exception>
        <exception cref="T:System.IO.FileNotFoundException">
            The specified file could not be found.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            The user does not have access to read the specified file.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ParserOptions options, MimeKit.ContentType contentType, System.IO.Stream content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ParserOptions options, class MimeKit.ContentType contentType, class System.IO.Stream content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="contentType" Type="MimeKit.ContentType" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="contentType">The Content-Type of the stream.</param>
        <param name="content">The content stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified content stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>
            This method is mostly meant for use with APIs such as <see cref="T:System.Net.HttpWebResponse" />
            where the headers are parsed separately from the content.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="contentType" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="content" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:System.FormatException">
            There was an error parsing the entity.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="OnHeadersChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeadersChanged (MimeKit.HeaderListChangedAction action, MimeKit.Header header);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeadersChanged(valuetype MimeKit.HeaderListChangedAction action, class MimeKit.Header header) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="MimeKit.HeaderListChangedAction" />
        <Parameter Name="header" Type="MimeKit.Header" />
      </Parameters>
      <Docs>
        <param name="action">The type of change.</param>
        <param name="header">The header being added, changed or removed.</param>
        <summary>
            Called when the headers change in some way.
            </summary>
        <remarks>
          <para>Whenever a header is added, changed, or removed, this method will
            be called in order to allow custom <see cref="T:MimeKit.MimeEntity" /> subclasses
            to update their state.</para>
          <para>Overrides of this method should call the base method so that their
            superclass may also update its own state.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHeader">
      <MemberSignature Language="C#" Value="protected void RemoveHeader (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveHeader(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the header.</param>
        <summary>
            Removes the header.
            </summary>
        <remarks>
            Removes all headers matching the specified name without
            calling <see cref="M:MimeKit.MimeEntity.OnHeadersChanged(MimeKit.HeaderListChangedAction,MimeKit.Header)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHeader">
      <MemberSignature Language="C#" Value="protected void SetHeader (string name, byte[] rawValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHeader(string name, unsigned int8[] rawValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rawValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">The name of the header.</param>
        <param name="rawValue">The raw value of the header.</param>
        <summary>
            Sets the header using the raw value.
            </summary>
        <remarks>
            Sets the header to the specified value without
            calling <see cref="M:MimeKit.MimeEntity.OnHeadersChanged(MimeKit.HeaderListChangedAction,MimeKit.Header)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHeader">
      <MemberSignature Language="C#" Value="protected void SetHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHeader(string name, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the header.</param>
        <param name="value">The value of the header.</param>
        <summary>
            Sets the header.
            </summary>
        <remarks>
            Sets the header to the specified value without
            calling <see cref="M:MimeKit.MimeEntity.OnHeadersChanged(MimeKit.HeaderListChangedAction,MimeKit.Header)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryInit">
      <MemberSignature Language="C#" Value="protected bool TryInit (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TryInit(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object.</param>
        <summary>
            Tries to use the given object to initialize the appropriate property.
            </summary>
        <returns>
          <c>true</c> if the object was recognized and used; <c>false</c> otherwise.</returns>
        <remarks>
            Initializes the appropriate property based on the type of the object.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <summary>
            Writes the <see cref="T:MimeKit.MimeEntity" /> to the specified output stream.
            </summary>
        <remarks>
            Writes the entity to the output stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (MimeKit.FormatOptions options, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class MimeKit.FormatOptions options, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="stream">The output stream.</param>
        <summary>
            Writes the <see cref="T:MimeKit.MimeEntity" /> to the specified output stream.
            </summary>
        <remarks>
            Writes the entity to the output stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="stream" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.Stream stream, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Writes the <see cref="T:MimeKit.MimeEntity" /> to the specified output stream.
            </summary>
        <remarks>
            Writes the entity to the output stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (MimeKit.FormatOptions options, System.IO.Stream stream, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class MimeKit.FormatOptions options, class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="stream">The output stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Writes the <see cref="T:MimeKit.MimeEntity" /> to the specified output stream.
            </summary>
        <remarks>
          <para>Writes the headers to the output stream, followed by a blank line.</para>
          <para>Subclasses should override this method to write the content of the entity.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="stream" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
