<Type Name="ContentType" FullName="MimeKit.ContentType">
  <TypeSignature Language="C#" Value="public class ContentType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentType extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a Content-Type header value.
            </summary>
    <remarks>
            The Content-Type header is a way for the originating client to
            suggest to the receiving client the mime-type of the content and,
            depending on that mime-type, presentation options such as charset.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentType (string mediaType, string mediaSubtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mediaType, string mediaSubtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="mediaSubtype" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType">Media type.</param>
        <param name="mediaSubtype">Media subtype.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.ContentType" /> class.
            </summary>
        <remarks>
            Creates a new <see cref="T:MimeKit.ContentType" /> based on the media type and subtype provided.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="mediaType" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="mediaSubtype" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="mediaType" /> is empty or contains invalid characters.</para>
          <para>-or-</para>
          <para>
            <paramref name="mediaSubtype" /> is empty or contains invalid characters.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Boundary">
      <MemberSignature Language="C#" Value="public string Boundary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Boundary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the boundary parameter.
            </summary>
        <value>The boundary.</value>
        <remarks>
            This is a special parameter on <see cref="T:MimeKit.Multipart" /> entities, designating to the
            parser a unique string that should be considered the boundary marker for each sub-part.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public string Charset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Charset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the charset parameter.
            </summary>
        <value>The charset.</value>
        <remarks>
            Text-based <see cref="T:MimeKit.MimePart" /> entities will often include a charset parameter
            so that the receiving client can properly render the text.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (string mediaType, string mediaSubtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(string mediaType, string mediaSubtype) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="mediaSubtype" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type.</param>
        <param name="mediaSubtype">The media subtype.</param>
        <summary>
            Checks if the this instance of <see cref="T:MimeKit.ContentType" /> matches
            the specified media type and subtype.
            </summary>
        <returns>
          <c>true</c> if the <see cref="T:MimeKit.ContentType" /> matches the
            provided media type and subtype.</returns>
        <remarks>
            If the specified <paramref name="mediaType" /> or <paramref name="mediaSubtype" />
            are <c>"*"</c>, they match anything.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="mediaType" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="mediaSubtype" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MediaSubtype">
      <MemberSignature Language="C#" Value="public string MediaSubtype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaSubtype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the media subtype.
            </summary>
        <value>The media subtype.</value>
        <remarks>
            Represents the media subtype of the <see cref="T:MimeKit.MimeEntity" />. Examples include
            <c>"html"</c>, <c>"jpeg"</c>, and <c>"octet-stream"</c>. This string should
            always be treated as case-insensitive.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is empty or contains invalid characters.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the type of the media.
            </summary>
        <value>The type of the media.</value>
        <remarks>
            Represents the media type of the <see cref="T:MimeKit.MimeEntity" />. Examples include
            <c>"text"</c>, <c>"image"</c>, and <c>"application"</c>. This string should
            always be treated as case-insensitive.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is empty or contains invalid characters.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name parameter.
            </summary>
        <value>The name.</value>
        <remarks>
            The name parameter is a way for the originiating client to suggest
            to the receiving client a display-name for the content, which may
            be used by the receiving client if it cannot display the actual
            content to the user.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public MimeKit.ParameterList Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.ParameterList Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ParameterList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parameters.
            </summary>
        <value>The parameters.</value>
        <remarks>
            In addition to the media type and subtype, the Content-Type header may also
            contain parameters to provide further hints to the receiving client as to
            how to process or display the content.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentType Parse (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentType Parse(unsigned int8[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentType" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentType" />.</returns>
        <remarks>
            Parses a Content-Type value from the specified buffer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentType Parse (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentType Parse(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text.</param>
        <summary>
            Parse the specified text into a new instance of the <see cref="T:MimeKit.ContentType" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentType" />.</returns>
        <remarks>
            Parses a Content-Type value from the specified text.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is <c>null</c>.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="text" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentType Parse (MimeKit.ParserOptions options, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentType Parse(class MimeKit.ParserOptions options, unsigned int8[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentType" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentType" />.</returns>
        <remarks>
            Parses a Content-Type value from the specified buffer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentType Parse (byte[] buffer, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentType Parse(unsigned int8[] buffer, int32 startIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The start index of the buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentType" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentType" />.</returns>
        <remarks>
            Parses a Content-Type value from the supplied buffer starting at the specified index.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> is out of range.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentType Parse (MimeKit.ParserOptions options, byte[] buffer, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentType Parse(class MimeKit.ParserOptions options, unsigned int8[] buffer, int32 startIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The start index of the buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentType" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentType" />.</returns>
        <remarks>
            Parses a Content-Type value from the supplied buffer starting at the specified index.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> is out of range.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentType Parse (byte[] buffer, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentType Parse(unsigned int8[] buffer, int32 startIndex, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The start index of the buffer.</param>
        <param name="length">The length of the buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentType" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentType" />.</returns>
        <remarks>
            Parses a Content-Type value from the supplied buffer starting at the given index
            and spanning across the specified number of bytes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="length" /> do not specify
            a valid range in the byte array.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentType Parse (MimeKit.ParserOptions options, byte[] buffer, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentType Parse(class MimeKit.ParserOptions options, unsigned int8[] buffer, int32 startIndex, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The start index of the buffer.</param>
        <param name="length">The length of the buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentType" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentType" />.</returns>
        <remarks>
            Parses a Content-Type value from the supplied buffer starting at the given index
            and spanning across the specified number of bytes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="length" /> do not specify
            a valid range in the byte array.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a <see cref="T:System.String" /> that represents the current
            <see cref="T:MimeKit.ContentType" />.
            </summary>
        <returns>A <see cref="T:System.String" /> that represents the current
            <see cref="T:MimeKit.ContentType" />.</returns>
        <remarks>
            Creates a string-representation of the <see cref="T:MimeKit.ContentType" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (System.Text.Encoding charset, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.Text.Encoding charset, bool encode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charset" Type="System.Text.Encoding" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charset">The charset to be used when encoding the parameter values.</param>
        <param name="encode">If set to <c>true</c>, the parameter values will be encoded.</param>
        <summary>
            Serializes the <see cref="T:MimeKit.ContentType" /> to a string,
            optionally encoding the parameters.
            </summary>
        <returns>The serialized string.</returns>
        <remarks>
            Creates a string-representation of the <see cref="T:MimeKit.ContentType" />, optionally encoding
            the parameters as they would be encoded for transport.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="charset" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (byte[] buffer, out MimeKit.ContentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(unsigned int8[] buffer, class MimeKit.ContentType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="type" Type="MimeKit.ContentType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="type">The parsed content type.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentType" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the content type was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Type value from the specified buffer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string text, out MimeKit.ContentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string text, class MimeKit.ContentType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="MimeKit.ContentType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">The text to parse.</param>
        <param name="type">The parsed content type.</param>
        <summary>
            Tries to parse the given text into a new <see cref="T:MimeKit.ContentType" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the content type was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Type value from the specified text.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (MimeKit.ParserOptions options, byte[] buffer, out MimeKit.ContentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class MimeKit.ParserOptions options, unsigned int8[] buffer, class MimeKit.ContentType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="type" Type="MimeKit.ContentType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="type">The parsed content type.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentType" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the content type was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Type value from the specified buffer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (byte[] buffer, int startIndex, out MimeKit.ContentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(unsigned int8[] buffer, int32 startIndex, class MimeKit.ContentType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="type" Type="MimeKit.ContentType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The starting index of the input buffer.</param>
        <param name="type">The parsed content type.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentType" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the content type was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Type value from the supplied buffer starting at the specified index.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (MimeKit.ParserOptions options, byte[] buffer, int startIndex, out MimeKit.ContentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class MimeKit.ParserOptions options, unsigned int8[] buffer, int32 startIndex, class MimeKit.ContentType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="type" Type="MimeKit.ContentType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The starting index of the input buffer.</param>
        <param name="type">The parsed content type.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentType" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the content type was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Type value from the supplied buffer starting at the specified index.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (byte[] buffer, int startIndex, int length, out MimeKit.ContentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(unsigned int8[] buffer, int32 startIndex, int32 length, class MimeKit.ContentType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="type" Type="MimeKit.ContentType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The starting index of the input buffer.</param>
        <param name="length">The number of bytes in the input buffer to parse.</param>
        <param name="type">The parsed content type.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentType" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the content type was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Type value from the supplied buffer starting at the given index
            and spanning across the specified number of bytes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="length" /> do not specify
            a valid range in the byte array.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (MimeKit.ParserOptions options, byte[] buffer, int startIndex, int length, out MimeKit.ContentType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class MimeKit.ParserOptions options, unsigned int8[] buffer, int32 startIndex, int32 length, class MimeKit.ContentType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="type" Type="MimeKit.ContentType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The starting index of the input buffer.</param>
        <param name="length">The number of bytes in the input buffer to parse.</param>
        <param name="type">The parsed content type.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentType" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the content type was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Type value from the supplied buffer starting at the given index
            and spanning across the specified number of bytes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="length" /> do not specify
            a valid range in the byte array.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
