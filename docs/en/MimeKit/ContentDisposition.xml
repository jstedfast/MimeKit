<Type Name="ContentDisposition" FullName="MimeKit.ContentDisposition">
  <TypeSignature Language="C#" Value="public class ContentDisposition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentDisposition extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a Content-Disposition header value.
            </summary>
    <remarks>
            The Content-Disposition header is a way for the originating client to
            suggest to the receiving client whether to present the part to the user
            as an attachment or as part of the content (inline).
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentDisposition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.ContentDisposition" /> class.
            </summary>
        <remarks>
            This is identical to <see cref="M:MimeKit.ContentDisposition.#ctor(System.String)" /> with a disposition
            value of <see cref="F:MimeKit.ContentDisposition.Attachment" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentDisposition (string disposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string disposition) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="disposition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="disposition">The disposition.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.ContentDisposition" /> class.
            </summary>
        <remarks>
            The disposition should either be <see cref="F:MimeKit.ContentDisposition.Attachment" />
            or <see cref="F:MimeKit.ContentDisposition.Inline" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="disposition" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="disposition" /> is not <c>"attachment"</c> or <c>"inline"</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Attachment">
      <MemberSignature Language="C#" Value="public const string Attachment;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Attachment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The attachment disposition.
            </summary>
        <remarks>
            Indicates that the <see cref="T:MimeKit.MimePart" /> should be treated as an attachment.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTimeOffset&gt; CreationDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; CreationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the creation-date parameter.
            </summary>
        <value>The creation date.</value>
        <remarks>
            Refers to the date and time that the content file was created on the
            originating system. This parameter serves little purpose and is
            typically not used by mail clients.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disposition">
      <MemberSignature Language="C#" Value="public string Disposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Disposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the disposition.
            </summary>
        <value>The disposition.</value>
        <remarks>
            The disposition is typically either <c>"attachment"</c> or <c>"inline"</c>.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is not <c>"attachment"</c> or <c>"inline"</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the file.
            </summary>
        <value>The name of the file.</value>
        <remarks>
            When set, this can provide a useful hint for a default file name for the
            content when the user decides to save it to disk.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inline">
      <MemberSignature Language="C#" Value="public const string Inline;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Inline" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The inline disposition.
            </summary>
        <remarks>
            Indicates that the <see cref="T:MimeKit.MimePart" /> should be rendered inline.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttachment">
      <MemberSignature Language="C#" Value="public bool IsAttachment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the <see cref="T:MimeKit.MimePart" /> is an attachment.
            </summary>
        <value>
          <c>true</c> if the <see cref="T:MimeKit.MimePart" /> is an attachment; otherwise, <c>false</c>.</value>
        <remarks>
            A convenience property to determine if the entity should be considered an attachment or not.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTimeOffset&gt; ModificationDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; ModificationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the modification-date parameter.
            </summary>
        <value>The modification date.</value>
        <remarks>
            Refers to the date and time that the content file was last modified on
            the originating system. This parameter serves little purpose and is
            typically not used by mail clients.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public MimeKit.ParameterList Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.ParameterList Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ParameterList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parameters.
            </summary>
        <value>The parameters.</value>
        <remarks>
            In addition to specifying whether the entity should be treated as an
            attachment vs displayed inline, the Content-Disposition header may also
            contain parameters to provide further information to the receiving client
            such as the file attributes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentDisposition Parse (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentDisposition Parse(unsigned int8[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentDisposition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentDisposition" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentDisposition" />.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentDisposition Parse (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentDisposition Parse(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentDisposition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The input text.</param>
        <summary>
            Parse the specified text into a new instance of the <see cref="T:MimeKit.ContentDisposition" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentDisposition" />.</returns>
        <remarks>
            Parses a Content-Disposition value from the specified text.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is <c>null</c>.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="text" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentDisposition Parse (MimeKit.ParserOptions options, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentDisposition Parse(class MimeKit.ParserOptions options, unsigned int8[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentDisposition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentDisposition" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentDisposition" />.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentDisposition Parse (byte[] buffer, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentDisposition Parse(unsigned int8[] buffer, int32 startIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentDisposition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The start index of the buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentDisposition" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentDisposition" />.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer starting at the specified index.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> is out of range.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentDisposition Parse (MimeKit.ParserOptions options, byte[] buffer, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentDisposition Parse(class MimeKit.ParserOptions options, unsigned int8[] buffer, int32 startIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentDisposition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The start index of the buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentDisposition" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentDisposition" />.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer starting at the specified index.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> is out of range.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentDisposition Parse (byte[] buffer, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentDisposition Parse(unsigned int8[] buffer, int32 startIndex, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentDisposition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The start index of the buffer.</param>
        <param name="length">The length of the buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentDisposition" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentDisposition" />.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer starting at the given index
            and spanning across the specified number of bytes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="length" /> do not specify
            a valid range in the byte array.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static MimeKit.ContentDisposition Parse (MimeKit.ParserOptions options, byte[] buffer, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.ContentDisposition Parse(class MimeKit.ParserOptions options, unsigned int8[] buffer, int32 startIndex, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentDisposition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The start index of the buffer.</param>
        <param name="length">The length of the buffer.</param>
        <summary>
            Parse the specified input buffer into a new instance of the <see cref="T:MimeKit.ContentDisposition" /> class.
            </summary>
        <returns>The parsed <see cref="T:MimeKit.ContentDisposition" />.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer starting at the given index
            and spanning across the specified number of bytes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="length" /> do not specify
            a valid range in the byte array.
            </exception>
        <exception cref="T:MimeKit.ParseException">
            The <paramref name="buffer" /> could not be parsed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTimeOffset&gt; ReadDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; ReadDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the read-date parameter.
            </summary>
        <value>The read date.</value>
        <remarks>
            Refers to the date and time that the content file was last read on the
            originating system. This parameter serves little purpose and is typically
            not used by mail clients.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the size parameter.
            </summary>
        <value>The size.</value>
        <remarks>
            When set, the size parameter typically refers to the original size of the
            content on disk. This parameter is rarely used by mail clients as it serves
            little purpose.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a <see cref="T:System.String" /> that represents the current
            <see cref="T:MimeKit.ContentDisposition" />.
            </summary>
        <returns>A <see cref="T:System.String" /> that represents the current
            <see cref="T:MimeKit.ContentDisposition" />.</returns>
        <remarks>
            Creates a string-representation of the <see cref="T:MimeKit.ContentDisposition" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (System.Text.Encoding charset, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.Text.Encoding charset, bool encode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charset" Type="System.Text.Encoding" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charset">The charset to be used when encoding the parameter values.</param>
        <param name="encode">If set to <c>true</c>, the parameter values will be encoded.</param>
        <summary>
            Serializes the <see cref="T:MimeKit.ContentDisposition" /> to a string,
            optionally encoding the parameters.
            </summary>
        <returns>The serialized string.</returns>
        <remarks>
            Creates a string-representation of the <see cref="T:MimeKit.ContentDisposition" />,
            optionally encoding the parameters as they would be encoded for trabsport.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (byte[] buffer, out MimeKit.ContentDisposition disposition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(unsigned int8[] buffer, class MimeKit.ContentDisposition disposition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="disposition" Type="MimeKit.ContentDisposition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="disposition">The parsed disposition.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentDisposition" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the disposition was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Disposition value from the specified buffer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string text, out MimeKit.ContentDisposition disposition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string text, class MimeKit.ContentDisposition disposition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="disposition" Type="MimeKit.ContentDisposition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">The text to parse.</param>
        <param name="disposition">The parsed disposition.</param>
        <summary>
            Tries to parse the given text into a new <see cref="T:MimeKit.ContentDisposition" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the disposition was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied text.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (MimeKit.ParserOptions options, byte[] buffer, out MimeKit.ContentDisposition disposition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class MimeKit.ParserOptions options, unsigned int8[] buffer, class MimeKit.ContentDisposition disposition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="disposition" Type="MimeKit.ContentDisposition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="disposition">The parsed disposition.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentDisposition" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the disposition was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Disposition value from the specified buffer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (byte[] buffer, int startIndex, out MimeKit.ContentDisposition disposition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(unsigned int8[] buffer, int32 startIndex, class MimeKit.ContentDisposition disposition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="disposition" Type="MimeKit.ContentDisposition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The starting index of the input buffer.</param>
        <param name="disposition">The parsed disposition.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentDisposition" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the disposition was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer starting at the specified index.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (MimeKit.ParserOptions options, byte[] buffer, int startIndex, out MimeKit.ContentDisposition disposition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class MimeKit.ParserOptions options, unsigned int8[] buffer, int32 startIndex, class MimeKit.ContentDisposition disposition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="disposition" Type="MimeKit.ContentDisposition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The starting index of the input buffer.</param>
        <param name="disposition">The parsed disposition.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentDisposition" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the disposition was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer starting at the specified index.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (byte[] buffer, int startIndex, int length, out MimeKit.ContentDisposition disposition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(unsigned int8[] buffer, int32 startIndex, int32 length, class MimeKit.ContentDisposition disposition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="disposition" Type="MimeKit.ContentDisposition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The starting index of the input buffer.</param>
        <param name="length">The number of bytes in the input buffer to parse.</param>
        <param name="disposition">The parsed disposition.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentDisposition" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the disposition was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer starting at the given index
            and spanning across the specified number of bytes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="length" /> do not specify
            a valid range in the byte array.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (MimeKit.ParserOptions options, byte[] buffer, int startIndex, int length, out MimeKit.ContentDisposition disposition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class MimeKit.ParserOptions options, unsigned int8[] buffer, int32 startIndex, int32 length, class MimeKit.ContentDisposition disposition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="disposition" Type="MimeKit.ContentDisposition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="buffer">The input buffer.</param>
        <param name="startIndex">The starting index of the input buffer.</param>
        <param name="length">The number of bytes in the input buffer to parse.</param>
        <param name="disposition">The parsed disposition.</param>
        <summary>
            Tries to parse the given input buffer into a new <see cref="T:MimeKit.ContentDisposition" /> instance.
            </summary>
        <returns>
          <c>true</c>, if the disposition was successfully parsed, <c>false</c> otherwise.</returns>
        <remarks>
            Parses a Content-Disposition value from the supplied buffer starting at the given index
            and spanning across the specified number of bytes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="buffer" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> and <paramref name="length" /> do not specify
            a valid range in the byte array.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
