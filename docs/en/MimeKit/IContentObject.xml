<Type Name="IContentObject" FullName="MimeKit.IContentObject">
  <TypeSignature Language="C#" Value="public interface IContentObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContentObject" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            An interface for content stream encapsulation as used by <see cref="T:MimeKit.MimePart" />.
            </summary>
    <remarks>
            Implemented by <see cref="T:MimeKit.ContentObject" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeTo">
      <MemberSignature Language="C#" Value="public void DecodeTo (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DecodeTo(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <summary>
            Decodes the content stream into another stream.
            </summary>
        <remarks>
            If the content stream is encoded, this method will decode it into the
            output stream using a suitable decoder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeTo">
      <MemberSignature Language="C#" Value="public void DecodeTo (System.IO.Stream stream, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DecodeTo(class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Decodes the content stream into another stream.
            </summary>
        <remarks>
            If the content stream is encoded, this method will decode it into the
            output stream using a suitable decoder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was cancelled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public MimeKit.ContentEncoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MimeKit.ContentEncoding Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the content encoding.
            </summary>
        <value>The encoding.</value>
        <remarks>
            If the <see cref="T:System.IO.Stream" /> is not encoded, this value will be
            <see cref="F:MimeKit.ContentEncoding.Default" />. Otherwise, it will be
            set to the raw content encoding of the stream.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.Stream Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream Open() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Opens the decoded content stream.
            </summary>
        <returns>The decoded content stream.</returns>
        <remarks>
            Provides a means of reading the decoded content without having to first
            write it to another stream using <see cref="M:MimeKit.IContentObject.DecodeTo(System.IO.Stream)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <summary>
            Copies the content stream to the specified output stream.
            </summary>
        <remarks>
            Copies the data from <see cref="T:System.IO.Stream" /> into <paramref name="stream" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.Stream stream, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Copies the content stream to the specified output stream.
            </summary>
        <remarks>
            Copies the data from <see cref="T:System.IO.Stream" /> into <paramref name="stream" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was cancelled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
