<Type Name="ContentObject" FullName="MimeKit.ContentObject">
  <TypeSignature Language="C#" Value="public class ContentObject : MimeKit.IContentObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentObject extends System.Object implements class MimeKit.IContentObject" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.32.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MimeKit.IContentObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Encapsulates a content stream used by <see cref="T:MimeKit.MimePart" />.
            </summary>
    <remarks>
            A <see cref="T:MimeKit.ContentObject" /> represents the content of a <see cref="T:MimeKit.MimePart" />.
            The content has both a stream and an encoding (typically <see cref="F:MimeKit.ContentEncoding.Default" />).
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentObject (System.IO.Stream stream, MimeKit.ContentEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype MimeKit.ContentEncoding encoding) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="MimeKit.ContentEncoding" />
      </Parameters>
      <Docs>
        <param name="stream">The content stream.</param>
        <param name="encoding">The stream encoding.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.ContentObject" /> class.
            </summary>
        <remarks>
            When creating new <see cref="T:MimeKit.MimePart" />s, the <paramref name="encoding" />
            should typically be <see cref="F:MimeKit.ContentEncoding.Default" /> unless the
            <paramref name="stream" /> has already been encoded.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="stream" /> does not support reading.</para>
          <para>-or-</para>
          <para>
            <paramref name="stream" /> does not support seeking.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeTo">
      <MemberSignature Language="C#" Value="public void DecodeTo (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DecodeTo(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <summary>
            Decodes the content stream into another stream.
            </summary>
        <remarks>
            Uses the <see cref="P:MimeKit.ContentObject.Encoding" /> to decode the content stream to the output stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeTo">
      <MemberSignature Language="C#" Value="public void DecodeTo (System.IO.Stream stream, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DecodeTo(class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Decodes the content stream into another stream.
            </summary>
        <remarks>
            Uses the <see cref="P:MimeKit.ContentObject.Encoding" /> to decode the content stream to the output stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public MimeKit.ContentEncoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MimeKit.ContentEncoding Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content encoding.
            </summary>
        <value>The content encoding.</value>
        <remarks>
            If the <see cref="T:MimeKit.MimePart" /> was parsed from an existing stream, the
            encoding will be identical to the <see cref="P:MimeKit.MimePart.ContentTransferEncoding" />,
            otherwise it will typically be <see cref="F:MimeKit.ContentEncoding.Default" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.Stream Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream Open() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Opens the decoded content stream.
            </summary>
        <returns>The decoded content stream.</returns>
        <remarks>
            Provides a means of reading the decoded content without having to first
            write it to another stream using <see cref="M:MimeKit.ContentObject.DecodeTo(System.IO.Stream)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <summary>
            Copies the content stream to the specified output stream.
            </summary>
        <remarks>
            This is functionally equivalent to using <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
            to copy the raw content stream to the output stream.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.Stream stream, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.32.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Copies the content stream to the specified output stream.
            </summary>
        <remarks>
            This is equivalent to simply using <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> to
            copy the content stream to the output stream except that this method is
            cancellable.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
