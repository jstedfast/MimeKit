<Type Name="MimeIterator" FullName="MimeKit.MimeIterator">
  <TypeSignature Language="C#" Value="public class MimeIterator : System.Collections.Generic.IEnumerator&lt;MimeKit.MimeEntity&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MimeIterator extends System.Object implements class System.Collections.Generic.IEnumerator`1&lt;class MimeKit.MimeEntity&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.96.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;MimeKit.MimeEntity&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An iterator for a MIME tree structure.
            </summary>
    <remarks>
            Walks the MIME tree structure of a <see cref="T:MimeKit.MimeMessage" /> in depth-first order.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MimeIterator (MimeKit.MimeMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MimeKit.MimeMessage message) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.MimeIterator" /> class.
            </summary>
        <remarks>
            Creates a new <see cref="T:MimeKit.MimeIterator" /> for the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.MimeEntity Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current entity.
            </summary>
        <value>The current entity.</value>
        <remarks>
            After an iterator is created or after the <see cref="M:MimeKit.MimeIterator.Reset" /> method is called,
            the <see cref="M:MimeKit.MimeIterator.MoveNext" /> method must be called to advance the iterator to the
            first entity of the message before reading the value of the Current property;
            otherwise, Current throws a <see cref="T:System.InvalidOperationException" />. Current
            also throws a <see cref="T:System.InvalidOperationException" /> if the last call to
            <see cref="M:MimeKit.MimeIterator.MoveNext" /> returned false, which indicates the end of the message.
            </remarks>
        <exception cref="T:System.InvalidOperationException">
            Either <see cref="M:MimeKit.MimeIterator.MoveNext" /> has not been called or <see cref="M:MimeKit.MimeIterator.MoveNext" />
            has moved beyond the end of the message.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the depth of the current entity.
            </summary>
        <value>The depth.</value>
        <remarks>
            After an iterator is created or after the <see cref="M:MimeKit.MimeIterator.Reset" /> method is called,
            the <see cref="M:MimeKit.MimeIterator.MoveNext" /> method must be called to advance the iterator to the
            first entity of the message before reading the value of the Depth property;
            otherwise, Depth throws a <see cref="T:System.InvalidOperationException" />. Depth
            also throws a <see cref="T:System.InvalidOperationException" /> if the last call to
            <see cref="M:MimeKit.MimeIterator.MoveNext" /> returned false, which indicates the end of the message.
            </remarks>
        <exception cref="T:System.InvalidOperationException">
            Either <see cref="M:MimeKit.MimeIterator.MoveNext" /> has not been called or <see cref="M:MimeKit.MimeIterator.MoveNext" />
            has moved beyond the end of the message.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases all resources used by the <see cref="T:MimeKit.MimeIterator" /> object.
            </summary>
        <remarks>Call <see cref="M:MimeKit.MimeIterator.Dispose" /> when you are finished using the <see cref="T:MimeKit.MimeIterator" />. The
            <see cref="M:MimeKit.MimeIterator.Dispose" /> method leaves the <see cref="T:MimeKit.MimeIterator" /> in an unusable state. After
            calling <see cref="M:MimeKit.MimeIterator.Dispose" />, you must release all references to the <see cref="T:MimeKit.MimeIterator" /> so
            the garbage collector can reclaim the memory that the <see cref="T:MimeKit.MimeIterator" /> was occupying.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only the unmanaged resources.</param>
        <summary>
            Releases the unmanaged resources used by the <see cref="T:MimeKit.MimeIterator" /> and
            optionally releases the managed resources.
            </summary>
        <remarks>
            Releases the unmanaged resources used by the <see cref="T:MimeKit.MimeIterator" /> and
            optionally releases the managed resources.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MimeIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases unmanaged resources and performs other cleanup operations before
            the <see cref="T:MimeKit.MimeIterator" /> is reclaimed by garbage collection.
            </summary>
        <remarks>
            Releases unmanaged resources and performs other cleanup operations before
            the <see cref="T:MimeKit.MimeIterator" /> is reclaimed by garbage collection.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public MimeKit.MimeMessage Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.MimeMessage Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the top-level message.
            </summary>
        <value>The message.</value>
        <remarks>
            Gets the top-level message.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Advances the iterator to the next depth-first entity of the tree structure.
            </summary>
        <returns>
          <c>true</c> if the iterator was successfully advanced to the next entity; otherwise, <c>false</c>.</returns>
        <remarks>
            After an iterator is created or after the <see cref="M:MimeKit.MimeIterator.Reset" /> method is called,
            an iterator is positioned before the first entity of the message, and the first
            call to the MoveNext method moves the iterator to the first entity of the message.
            If MoveNext advances beyond the last entity of the message, MoveNext returns false.
            When the iterator is at this position, subsequent calls to MoveNext also return
            false until <see cref="M:MimeKit.MimeIterator.Reset" /> is called.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public bool MoveTo (string pathSpecifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveTo(string pathSpecifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathSpecifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathSpecifier">The path specifier.</param>
        <summary>
            Advances to the entity specified by the path specifier.
            </summary>
        <returns>
          <c>true</c> if advancing to the specified entity was successful; otherwise, <c>false</c>.</returns>
        <remarks>
          <para>Advances the iterator to the entity specified by the path specifier which
            must be in the same format as returned by <see cref="P:MimeKit.MimeIterator.PathSpecifier" />.</para>
          <para>If the iterator has already advanced beyond the entity at the specified
            path, the iterator will <see cref="M:MimeKit.MimeIterator.Reset" /> and advance as normal.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pathSpecifier" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pathSpecifier" /> is empty.
            </exception>
        <exception cref="T:System.FormatException">
          <paramref name="pathSpecifier" /> is in an invalid format.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.MimeEntity Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parent of the current entity.
            </summary>
        <value>The parent entity.</value>
        <remarks>
          <para>After an iterator is created or after the <see cref="M:MimeKit.MimeIterator.Reset" /> method is called,
            the <see cref="M:MimeKit.MimeIterator.MoveNext" /> method must be called to advance the iterator to the
            first entity of the message before reading the value of the Parent property;
            otherwise, Parent throws a <see cref="T:System.InvalidOperationException" />. Parent
            also throws a <see cref="T:System.InvalidOperationException" /> if the last call to
            <see cref="M:MimeKit.MimeIterator.MoveNext" /> returned false, which indicates the end of the message.</para>
          <para>If the current entity is the top-level entity of the message, then the parent
            will be <c>null</c>; otherwise the parent will be either be a
            <see cref="T:MimeKit.MessagePart" /> or a <see cref="T:MimeKit.Multipart" />.</para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
            Either <see cref="M:MimeKit.MimeIterator.MoveNext" /> has not been called or <see cref="M:MimeKit.MimeIterator.MoveNext" />
            has moved beyond the end of the message.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="PathSpecifier">
      <MemberSignature Language="C#" Value="public string PathSpecifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSpecifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the path specifier for the current entity.
            </summary>
        <value>The path specifier.</value>
        <remarks>
            After an iterator is created or after the <see cref="M:MimeKit.MimeIterator.Reset" /> method is called,
            the <see cref="M:MimeKit.MimeIterator.MoveNext" /> method must be called to advance the iterator to the
            first entity of the message before reading the value of the PathSpecifier property;
            otherwise, PathSpecifier throws a <see cref="T:System.InvalidOperationException" />.
            PathSpecifier also throws a <see cref="T:System.InvalidOperationException" /> if the
            last call to <see cref="M:MimeKit.MimeIterator.MoveNext" /> returned false, which indicates the end of
            the message.
            </remarks>
        <exception cref="T:System.InvalidOperationException">
            Either <see cref="M:MimeKit.MimeIterator.MoveNext" /> has not been called or <see cref="M:MimeKit.MimeIterator.MoveNext" />
            has moved beyond the end of the message.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resets the iterator to its initial state.
            </summary>
        <remarks>
            Resets the iterator to its initial state.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.96.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current entity.
            </summary>
        <value>The current entity.</value>
        <remarks>
            After an iterator is created or after the <see cref="M:MimeKit.MimeIterator.Reset" /> method is called,
            the <see cref="M:MimeKit.MimeIterator.MoveNext" /> method must be called to advance the iterator to the
            first entity of the message before reading the value of the Current property;
            otherwise, Current throws a <see cref="T:System.InvalidOperationException" />. Current
            also throws a <see cref="T:System.InvalidOperationException" /> if the last call to
            <see cref="M:MimeKit.MimeIterator.MoveNext" /> returned false, which indicates the end of the message.
            </remarks>
        <exception cref="T:System.InvalidOperationException">
            Either <see cref="M:MimeKit.MimeIterator.MoveNext" /> has not been called or <see cref="M:MimeKit.MimeIterator.MoveNext" />
            has moved beyond the end of the message.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
